{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1c1b","webpack:///./src/components/NavHeader.vue?a270","webpack:///./src/components/BotFooter.vue?38e4","webpack:///./src/App.vue?0a78","webpack:///./src/components/BotFooter.vue?95f4","webpack:///src/components/BotFooter.vue","webpack:///./src/components/BotFooter.vue?c064","webpack:///./src/components/BotFooter.vue","webpack:///./src/components/NavHeader.vue?b6e3","webpack:///src/components/NavHeader.vue","webpack:///./src/components/NavHeader.vue?c7b5","webpack:///./src/components/NavHeader.vue","webpack:///./src/components/Tab.vue?0e6a","webpack:///./src/components/tabs/Home.vue?c6ac","webpack:///src/components/tabs/Home.vue","webpack:///./src/components/tabs/Home.vue?473b","webpack:///./src/components/tabs/Home.vue","webpack:///./src/components/tabs/Test.vue?1e14","webpack:///src/components/tabs/Test.vue","webpack:///./src/components/tabs/Test.vue?9316","webpack:///./src/components/tabs/Test.vue","webpack:///src/components/Tab.vue","webpack:///./src/components/Tab.vue?0726","webpack:///./src/components/Tab.vue","webpack:///src/App.vue","webpack:///./src/App.vue?2ad4","webpack:///./src/App.vue","webpack:///./src/components/tabs/Home.vue?0b5b","webpack:///./src/main.js","webpack:///./src/service/common.js","webpack:///./src/service/service.js","webpack:///./src/components/tabs/Test.vue?a61b","webpack:///./src/components/Tab.vue?0040"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","_m","staticClass","_v","props","msg","String","component","model","callback","$$v","tabIndex","expression","linkClass","on","OnSelectnetwork","network","_s","_e","Boolean","file","onFileChange","files","variant_upload","disable_upload","OnUpload","variant_compile","disable_compile","OnCompile","contracts","OnSelectContract","selected_contract","contract_addresses","selected_address","abis","OnChangeAbi","selected_abi","_l","ref","refInFor","readonly","OnDeploy","split","domProps","log","options","OnSelectExample","selected","class","zoom","OnMouseOverFSM","OnMouseOutFSM","cmOptions_json","OnStateMachineChange","fsm","directives","rawName","mouseOverFSM","staticStyle","lSVGInAString","OnCoverStrategy","covering_strategy","states","selected_state","OnTransitions","selected_transition_startstate","transitions","selected_transition","fsm_status","model_status","disableTest","variantTest","$event","OnTest","textTestButton","status_stop_start","disabledRandomTest","disableRandomTest","variantRandomTest","OnRandomTest","textRandomTestButton","disabledTest","test_results","OnClearTable","cmOptions","components","Home","ModelTest","BotFooter","NavHeader","Tab","fsmservice","FSMService","Popper","Defaults","modifiers","computeStyle","gpuAcceleration","global","vm","SocketInstance","SocketIO","reconnection","reconnectionDelay","uploader","SocketIOFileUpload","Vue","$fsmservice","$uploader","$socket","$smcat","Smcat","JsonCSV","use","VueCodemirror","BootstrapVue","IconsPlugin","config","productionTip","h","App","$mount","CoverState","CoverTransition","CoverTransitionLoop","BCOS_SUCCESS_STATUS","CMA_normal","CMA_dummy","beautify","require","js","constructor","add_contracts","enable_randomTest","random_test","add_covering_strategy","strategy","disable_randomTest","get_fsm","get_stateOptions","assert","ret","state","text","get_possible_transitions","start_state","transition","from","to","action","generate_dummy_loop_fsm","dummy_states","JSON","parse","stringify","dummy_transitions","loopStates","Set","loopTransitions","add","has","dummyState","trim","dtransition","indexOf","dummyTransitionFrom","dummyTransitionTo","activate_states","activate_transition","currentState","action_Report","previous_action_Report","color","console","add_action_report","index","_get_initial_state","current_to_state","transitionID","isFresh_result","next_result","path","fullaction","plan","type","test_cases","currentTime","startTime","toFixed","concat","add_fsm","id","actions","__get_sm_state","get_sm_cat","_get_abi_interface","address","template_iterface","abi","toUpperCase","_get_contract_interface","template_contract_interfaces","contract","keys","_get_contracts_interface_instances","instances","__get_action_functions","funs","fun","_getPrePostPredicateForAction","prePredication","postPredication","Predicate","join","replace","_get_action_functions_mapping","mapping","prepost","prePredicate","postPredicate","_get_state_machine_ctx","template_state_machine_ctx","target_contract","__get_xstates","ons","count","charAt","substring","__get_xactions","array","_get_state_machine","template_state_machine","get_model_script","model_script","template_requires","indent_size","space_in_empty_paren","to_sm_Xstate"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,IAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,wDCvJT,yBAAwb,EAAG,G,otDCA3b,yBAAsiB,EAAG,G,6ICAziB,yBAAwe,EAAG,G,oCCA3e,IAAIyC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,aAAaA,EAAG,OAAOA,EAAG,cAAc,IACtKG,EAAkB,GCDlB,EAAS,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIQ,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIR,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,MAAM,CAAC,GAAK,WAAW,CAACF,EAAG,IAAI,CAACK,YAAY,eAAe,CAACT,EAAIU,GAAG,kFCK1L,GACEpC,KAAM,YACNqC,MAAO,CACLC,IAAKC,SCT0U,I,wBCQ/UC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCnBX,EAAS,WAAa,IAAId,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIQ,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIR,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,0CAA0C,CAACL,EAAG,MAAM,CAACK,YAAY,mBAAmB,CAACL,EAAG,MAAM,CAACK,YAAY,iBAAiB,CAACL,EAAG,IAAI,CAACK,YAAY,eAAeH,MAAM,CAAC,KAAO,cAAc,CAACN,EAAIU,GAAG,cAAcN,EAAG,MAAM,CAACK,YAAY,2BAA2BH,MAAM,CAAC,GAAK,uBAAuB,CAACF,EAAG,KAAK,CAACK,YAAY,+BAA+B,CAACL,EAAG,KAAK,CAACK,YAAY,UAAU,CAACL,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,iBAAiBF,EAAG,KAAK,CAACA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,MAAM,CAACN,EAAIU,GAAG,aAAaN,EAAG,KAAK,CAACA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,MAAM,CAACN,EAAIU,GAAG,oBAAoBN,EAAG,KAAK,CAACA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,MAAM,CAACN,EAAIU,GAAG,wBCuB3sB,GACE,KAAF,YACE,MAAF,CACI,IAAJ,SC3BmV,ICQ/U,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAIV,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,SAAS,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,IAAIS,MAAM,CAAChC,MAAOiB,EAAY,SAAEgB,SAAS,SAAUC,GAAMjB,EAAIkB,SAASD,GAAKE,WAAW,aAAa,CAACf,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,UAAU,mBAAmBN,EAAIoB,UAAU,GAAG,OAAS,KAAK,CAAChB,EAAG,SAAS,CAACA,EAAG,QAAQ,CAACJ,EAAIU,GAAG,iCAAiCN,EAAG,gBAAgB,CAACK,YAAY,OAAOH,MAAM,CAAC,GAAK,0CAA0Ce,GAAG,CAAC,OAASrB,EAAIsB,iBAAiBP,MAAM,CAAChC,MAAOiB,EAAW,QAAEgB,SAAS,SAAUC,GAAMjB,EAAIuB,QAAQN,GAAKE,WAAW,YAAY,CAACf,EAAG,uBAAuB,CAACE,MAAM,CAAC,MAAQ,OAAO,CAACN,EAAIU,GAAG,aAAaN,EAAG,uBAAuB,CAACE,MAAM,CAAC,MAAQ,eAAe,CAACN,EAAIU,GAAG,gBAAgBN,EAAG,uBAAuB,CAACE,MAAM,CAAC,MAAQ,aAAa,CAACN,EAAIU,GAAG,eAAe,GAAIV,EAAW,QAAEI,EAAG,OAAO,CAACJ,EAAIU,GAAG,oBAAoBV,EAAIwB,GAAGxB,EAAIuB,YAAYvB,EAAIyB,MAAM,IAAI,GAAGrB,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,OAAO,mBAAmBN,EAAIoB,UAAU,GAAG,OAAS,KAAK,CAAChB,EAAG,SAAS,GAAGA,EAAG,QAAQ,CAACE,MAAM,CAAC,MAAQ,OAAO,mBAAmBN,EAAIoB,UAAU,KAAK,CAAChB,EAAG,cAAc,IAAI,IAAI,IAAI,IACrnC,EAAkB,GCDlB,EAAS,WAAa,IAAIJ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,aAAa,CAACL,EAAG,SAAS,CAACK,YAAY,OAAOH,MAAM,CAAC,OAAS,gEAAgE,eAAe,KAAK,oBAAoB,QAAQ,sBAAsB,YAAY,CAACF,EAAG,SAAS,CAACA,EAAG,eAAe,CAACE,MAAM,CAAC,GAAK,gBAAgB,cAAc,OAAO,MAAQ,mBAAmB,YAAY,sBAAsB,YAAc,4DAA4D,CAACF,EAAG,cAAc,CAACE,MAAM,CAAC,GAAK,sBAAsB,MAAQoB,QAAQ1B,EAAI2B,MAAM,QAAU,OAAO,YAAc,2CAA2C,mBAAmB,oBAAoB,SAAW,IAAIN,GAAG,CAAC,OAASrB,EAAI4B,cAAcb,MAAM,CAAChC,MAAOiB,EAAS,MAAEgB,SAAS,SAAUC,GAAMjB,EAAI6B,MAAMZ,GAAKE,WAAW,YAAY,GAAInB,EAAuB,oBAAEI,EAAG,aAAa,CAACE,MAAM,CAAC,MAAkB,IAAVN,EAAIjB,MAAUiB,EAAI6B,MAAMnF,OAAO,QAAU,aAAasD,EAAIyB,KAAKrB,EAAG,WAAW,CAACK,YAAY,QAAQH,MAAM,CAAC,QAAUN,EAAI8B,eAAe,SAAW9B,EAAI+B,gBAAgBV,GAAG,CAAC,MAAQrB,EAAIgC,WAAW,CAAC5B,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,eAAe,MAAQ,IAAI,cAAc,UAAUF,EAAG,OAAO,CAACJ,EAAIU,GAAG,eAAe,GAAGN,EAAG,WAAW,CAACK,YAAY,OAAOH,MAAM,CAAC,QAAUN,EAAIiC,gBAAgB,SAAWjC,EAAIkC,iBAAiBb,GAAG,CAAC,MAAQrB,EAAImC,YAAY,CAAC/B,EAAG,OAAO,CAACJ,EAAIU,GAAG,aAAcV,EAAkB,eAAEI,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,YAAYN,EAAIyB,KAAMzB,EAAwB,qBAAEI,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,MAAMN,EAAIyB,MAAM,GAAIzB,EAAkB,eAAEI,EAAG,SAAS,CAACK,YAAY,OAAOH,MAAM,CAAC,OAAS,KAAK,CAACF,EAAG,QAAQ,CAACK,YAAY,UAAUH,MAAM,CAAC,IAAM,uCAAuC,CAACN,EAAIU,GAAG,eAAeN,EAAG,gBAAgB,CAACK,YAAY,uBAAuBH,MAAM,CAAC,GAAK,qCAAqC,QAAUN,EAAIoC,WAAWf,GAAG,CAAC,OAASrB,EAAIqC,kBAAkBtB,MAAM,CAAChC,MAAOiB,EAAqB,kBAAEgB,SAAS,SAAUC,GAAMjB,EAAIsC,kBAAkBrB,GAAKE,WAAW,uBAAwBnB,EAAqB,kBAAEI,EAAG,QAAQ,CAACK,YAAY,UAAUH,MAAM,CAAC,IAAM,+CAA+C,CAACN,EAAIU,GAAG,cAAcV,EAAIyB,KAAMzB,EAAqB,kBAAEI,EAAG,gBAAgB,CAACK,YAAY,uBAAuBH,MAAM,CAAC,GAAK,6CAA6C,QAAUN,EAAIuC,oBAAoBxB,MAAM,CAAChC,MAAOiB,EAAoB,iBAAEgB,SAAS,SAAUC,GAAMjB,EAAIwC,iBAAiBvB,GAAKE,WAAW,sBAAsBnB,EAAIyB,KAAMzB,EAAqB,kBAAEI,EAAG,QAAQ,CAACK,YAAY,UAAUH,MAAM,CAAC,IAAM,2CAA2C,CAACN,EAAIU,GAAG,UAAUV,EAAIyB,KAAMzB,EAAqB,kBAAEI,EAAG,gBAAgB,CAACK,YAAY,uBAAuBH,MAAM,CAAC,GAAK,yCAAyC,QAAUN,EAAIyC,MAAMpB,GAAG,CAAC,OAASrB,EAAI0C,aAAa3B,MAAM,CAAChC,MAAOiB,EAAgB,aAAEgB,SAAS,SAAUC,GAAMjB,EAAI2C,aAAa1B,GAAKE,WAAW,kBAAkBnB,EAAIyB,MAAM,GAAGzB,EAAIyB,KAAKzB,EAAI4C,GAAI5C,EAAgB,cAAE,SAASjB,EAAMT,GAAM,OAAO8B,EAAG,MAAM,CAACf,IAAIf,EAAKmC,YAAY,QAAQ,CAACL,EAAG,eAAe,CAACE,MAAM,CAAC,gBAAgB,IAAI,MAAS,GAAKhC,EAAM,iBAAiB,QAAQ,YAAa,GAAKA,IAAQ,CAAE0B,EAAgB,aAAEI,EAAG,eAAe,CAACyC,IAAK,GAAKvE,EAAMwE,UAAS,EAAKrC,YAAY,UAAUH,MAAM,CAAC,UAAYN,EAAI+C,SAAU,GAAKzE,GAAO,GAAM,GAAKA,EAAM,KAAQ,GAAKS,EAAO,YAAe,GAAKA,EAAO,SAAWiB,EAAI+C,SAAU,GAAKzE,MAAU0B,EAAIyB,MAAM,IAAI,MAAMzB,EAAkB,eAAEI,EAAG,WAAW,CAACK,YAAY,OAAOH,MAAM,CAAC,UAAYN,EAAI2C,aAAa,MAAQ,GAAG,QAAU,mBAAmBtB,GAAG,CAAC,MAAQrB,EAAIgD,WAAW,CAAChD,EAAIU,GAAG,IAAIV,EAAIwB,GAAGxB,EAAI2C,aAAa3C,EAAI2C,aAAarE,MAAM0B,EAAIsC,kBAAkBW,MAAM,QAAQ,GAAG,SAAS,SAAS,gCAAgCjD,EAAIyB,KAAKrB,EAAG,SAAS,CAACK,YAAY,OAAOH,MAAM,CAAC,OAAS,WAAW,CAACF,EAAG,OAAO,CAAC8C,SAAS,CAAC,UAAYlD,EAAIwB,GAAGxB,EAAImD,WAAW,IAAI,IAAI,IAC9uH,EAAkB,GC2DtB,iBACA,YACA,WACA,gBACA,SACA,kBACA,mBACA,kBACA,uBACA,gBACA,OACE,KAAF,OACE,KAAF,WACI,MAAJ,CACM,OAAN,CACQ,MAAR,yBACQ,OAAR,WACQ,YAAR,aACQ,MAAR,yBACQ,MAAR,WACQ,IAAR,cAEM,SAAN,GACM,MAAN,GAEM,eAAN,EAEM,qBAAN,EACM,MAAN,EAGM,gBAAN,EAEM,sBAAN,EAEM,eAAN,EACM,QAAN,GACM,UAAN,GACM,mBAAN,GACM,kBAAN,KACM,aAAN,KACM,iBAAN,KACM,IAAN,GACM,YAAN,KACM,UAAN,KAGE,QAAF,WAEI,QAAJ,6BAGI,IAAJ,OACI,KAAJ,0BACM,QAAN,OACM,EAAN,kBAEM,EAAN,6BACA,gBACA,kBACM,EAAN,iBACM,EAAN,kBACM,EAAN,2BAEI,KAAJ,0BACA,gBACA,kBACM,EAAN,oBAEI,KAAJ,0BACM,QAAN,SACM,EAAN,iBACM,EAAN,wCACA,sBACQ,EAAR,yBAEM,EAAN,wCACM,QAAN,4CACA,oCACQ,EAAR,qBACU,MAAV,UACU,KAAV,YAGQ,EAAR,yBACU,MAAV,UACU,KAAV,YAIA,gBACA,kBACM,EAAN,oBAEI,KAAJ,0BACM,EAAN,qCACA,gBACA,kBACM,EAAN,oBAEI,KAAJ,0BACA,gBACA,kBACM,EAAN,oBAGI,KAAJ,mDACM,QAAN,iCAEM,EAAN,iBAEM,EAAN,YAEI,KAAJ,mDACM,QAAN,gCAIE,QAAF,CACI,aAAJ,GACM,KAAN,QACM,IAAN,uCACM,GAAN,SAAM,CAIA,IAAN,SADM,KAAN,YACA,GACQ,KAAR,eACU,SAAV,SAGM,KAAN,QACM,KAAN,iBACM,KAAN,kBACM,KAAN,iBAEM,KAAN,uBACM,KAAN,0BAEI,WAEE,KAAN,uBACQ,KAAR,EACQ,KAAR,gBAEM,KAAN,kCACM,KAAN,wBAEI,YAOE,IAAN,SANM,KAAN,uBACQ,KAAR,EACQ,KAAR,gBAEM,KAAN,wBAEA,eACQ,KAAR,gBACU,MAAV,WACU,KAAV,cAII,WAGE,GAFA,QAAN,OACM,QAAN,OACA,8BACQ,IAAR,GACU,KAAV,EACU,KAAV,CACY,SAAZ,wCACY,QAAZ,sBACY,KAAZ,wDACY,OAAZ,oDACY,QAAZ,2BAGQ,QAAR,OACQ,KAAR,6BAEA,CACQ,IAAR,GACU,KAAV,EACU,KAAV,CACY,SAAZ,wCACY,QAAZ,sBACY,KAAZ,wDACY,OAAZ,oDACY,QAAZ,2BAGQ,QAAR,OACQ,KAAR,2BAKI,iBAAJ,GAIM,GAHA,QAAN,OACM,QAAN,6CACM,QAAN,yBACA,2DACA,0BACQ,MAAR,KACQ,KAAR,WAEA,CACQ,IAAR,KACQ,IAAR,iEACU,EAAV,MACY,MAAZ,EACY,KAAZ,IAGQ,KAAR,uBAII,cACE,QAAN,uBACM,KAAN,uGACM,QAAN,gCAEI,MAAJ,GACM,IAAN,KACM,GAAN,eACA,eACA,eACM,OAAN,UAEI,SAAJ,GAEM,QAAN,gBAGE,SAAF,CACI,eAAJ,WACM,OAAN,2CAEI,gBAAJ,WACM,OAAN,8EAEI,eAAJ,WACM,OAAN,yBAEI,gBAAJ,WACM,OAAN,uBAsBI,KAAJ,WACM,IAAN,KACA,KAGM,IAAN,SAFM,QAAN,yBACM,QAAN,kEACA,0FACA,4CACA,wBACY,GAAZ,GAEU,EAAV,4BACU,EAAV,8BACU,QAAV,YACA,qCACY,EAAZ,6CACY,EAAZ,MACc,MAAd,EACc,KAAd,2CAGY,EAAZ,MACc,MAAd,EACc,KAAd,UAKA,MACQ,EAAR,MACU,MAAV,CACY,KAAZ,wCACY,OAAZ,GACY,KAAZ,eAEU,KAAV,0CAIM,IAAN,OACM,OAAN,YACA,oFAIE,MAAF,CACI,IAAJ,SCpX6V,ICQzV,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,OAIa,I,QCnBX,EAAS,WAAa,IAAInD,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,cAAc,CAACE,MAAM,CAAC,MAAQ,KAAK,CAACF,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,UAAU,SAAS,KAAO,IAAI,GAAK,IAAI,CAACF,EAAG,cAAc,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,OAAS,KAAK,CAACF,EAAG,OAAO,CAACK,YAAY,uBAAuB,CAACT,EAAIU,GAAG,oBAAoBN,EAAG,eAAe,CAACK,YAAY,OAAOH,MAAM,CAAC,GAAK,aAAa,MAAQ,WAAW,YAAY,mBAAmB,CAACF,EAAG,gBAAgB,CAACE,MAAM,CAAC,GAAK,iBAAiB,QAAUN,EAAIoD,SAAS/B,GAAG,CAAC,OAASrB,EAAIqD,iBAAiBtC,MAAM,CAAChC,MAAOiB,EAAY,SAAEgB,SAAS,SAAUC,GAAMjB,EAAIsD,SAASrC,GAAKE,WAAW,eAAe,IAAI,IAAI,GAAGf,EAAG,cAAc,CAACmD,MAAMvD,EAAIwD,KAAKlD,MAAM,CAAC,GAAK,gBAAgBe,GAAG,CAAC,UAAYrB,EAAIyD,eAAe,WAAazD,EAAI0D,gBAAgB,CAACtD,EAAG,aAAa,CAACK,YAAY,eAAeH,MAAM,CAAC,GAAK,MAAM,QAAUN,EAAI2D,gBAAgBtC,GAAG,CAAC,OAASrB,EAAI4D,sBAAsB7C,MAAM,CAAChC,MAAOiB,EAAO,IAAEgB,SAAS,SAAUC,GAAMjB,EAAI6D,IAAI5C,GAAKE,WAAW,UAAU,IAAI,GAAGf,EAAG,QAAQ,CAACE,MAAM,CAAC,UAAU,SAAS,KAAO,IAAI,GAAK,IAAI,CAACF,EAAG,OAAO,CAACK,YAAY,uBAAuB,CAACT,EAAIU,GAAG,oBAAoBN,EAAG,QAAQ,CAAC0D,WAAW,CAAC,CAACxF,KAAK,OAAOyF,QAAQ,SAAShF,OAAQiB,EAAIgE,aAAc7C,WAAW,mBAAmB,CAAEnB,EAAO,IAAEI,EAAG,MAAM,CAACK,YAAY,YAAYwD,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ,OAAS,cAAcf,SAAS,CAAC,UAAYlD,EAAIwB,GAAGxB,EAAIkE,kBAAkBlE,EAAIyB,OAAQzB,EAAkB,cAAEI,EAAG,QAAQ,CAAC0D,WAAW,CAAC,CAACxF,KAAK,OAAOyF,QAAQ,SAAShF,OAAQiB,EAAIgE,aAAc7C,WAAW,mBAAmB,CAACf,EAAG,MAAM,CAACK,YAAY,YAAYwD,YAAY,CAAC,MAAQ,OAAO,OAAS,UAAU,CAAC7D,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,eAAe,CAACK,YAAY,2BAA2BH,MAAM,CAAC,MAAQ,aAAa,CAACF,EAAG,qBAAqB,CAACE,MAAM,CAAC,GAAK,uBAAuB,KAAO,kBAAkB,QAAU,IAAIe,GAAG,CAAC,MAAQrB,EAAImE,iBAAiBpD,MAAM,CAAChC,MAAOiB,EAAqB,kBAAEgB,SAAS,SAAUC,GAAMjB,EAAIoE,kBAAkBnD,GAAKE,WAAW,sBAAsB,CAACf,EAAG,eAAe,CAACK,YAAY,iBAAiBH,MAAM,CAAC,MAAQ,WAAW,CAACN,EAAIU,GAAG,iBAAiBN,EAAG,eAAe,CAACK,YAAY,iBAAiBH,MAAM,CAAC,MAAQ,6BAA6B,CAACN,EAAIU,GAAG,sBAAsBN,EAAG,eAAe,CAACK,YAAY,iBAAiBH,MAAM,CAAC,MAAQ,0BAA0B,CAACN,EAAIU,GAAG,8BAA8B,IAAI,IAAI,GAAGN,EAAG,QAAQ,CAACA,EAAG,eAAe,CAACK,YAAY,YAAYH,MAAM,CAAC,MAAQ,2CAA2C,CAACF,EAAG,SAAS,CAACK,YAAY,YAAYH,MAAM,CAAC,OAAS,KAAK,CAACF,EAAG,QAAQ,CAACK,YAAY,UAAUH,MAAM,CAAC,IAAM,oCAAoC,CAACN,EAAIU,GAAG,aAAaN,EAAG,gBAAgB,CAACK,YAAY,gCAAgCH,MAAM,CAAC,GAAK,kCAAkC,QAAUN,EAAIqE,QAAQtD,MAAM,CAAChC,MAAOiB,EAAkB,eAAEgB,SAAS,SAAUC,GAAMjB,EAAIsE,eAAerD,GAAKE,WAAW,qBAAqB,GAAGf,EAAG,SAAS,CAACK,YAAY,YAAYH,MAAM,CAAC,OAAS,KAAK,CAACF,EAAG,QAAQ,CAACK,YAAY,WAAW,CAACT,EAAIU,GAAG,kBAAkBN,EAAG,gBAAgB,CAACK,YAAY,gCAAgCH,MAAM,CAAC,QAAUN,EAAIqE,QAAQhD,GAAG,CAAC,OAASrB,EAAIuE,eAAexD,MAAM,CAAChC,MAAOiB,EAAkC,+BAAEgB,SAAS,SAAUC,GAAMjB,EAAIwE,+BAA+BvD,GAAKE,WAAW,oCAAoCf,EAAG,OAAO,CAACJ,EAAIU,GAAG,cAAWN,EAAG,gBAAgB,CAACK,YAAY,iCAAiCH,MAAM,CAAC,QAAUN,EAAIyE,aAAa1D,MAAM,CAAChC,MAAOiB,EAAuB,oBAAEgB,SAAS,SAAUC,GAAMjB,EAAI0E,oBAAoBzD,GAAKE,WAAW,0BAA0B,IAAI,IAAI,IAAI,GAAGf,EAAG,SAAS,CAACE,MAAM,CAAC,OAAS,KAAK,CAACF,EAAG,kBAAkB,CAACK,YAAY,YAAYH,MAAM,CAAC,GAAK,aAAa,KAAO,aAAa,MAAQ,YAAY,kBAAkB,iBAAiBS,MAAM,CAAChC,MAAOiB,EAAc,WAAEgB,SAAS,SAAUC,GAAMjB,EAAI2E,WAAW1D,GAAKE,WAAW,eAAe,CAACnB,EAAIU,GAAG,2BAA2BN,EAAG,kBAAkB,CAACK,YAAY,YAAYH,MAAM,CAAC,GAAK,aAAa,KAAO,aAAa,MAAQ,YAAY,kBAAkB,iBAAiBS,MAAM,CAAChC,MAAOiB,EAAgB,aAAEgB,SAAS,SAAUC,GAAMjB,EAAI4E,aAAa3D,GAAKE,WAAW,iBAAiB,CAACnB,EAAIU,GAAG,4BAA4BN,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,WAAW,cAAc,SAAS,UAAU,SAAS,WAAW,SAASF,EAAG,WAAW,CAACK,YAAY,uBAAuBH,MAAM,CAAC,SAAWN,EAAI6E,YAAY,KAAO,KAAK,QAAU7E,EAAI8E,aAAazD,GAAG,CAAC,MAAQ,SAAS0D,GAAQ,OAAO/E,EAAIgF,YAAY,CAAC5E,EAAG,OAAO,CAACJ,EAAIU,GAAGV,EAAIwB,GAAGxB,EAAIiF,mBAAoBjF,EAAIkF,mBAAmBlF,EAAImF,mBAAoB/E,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,MAAMN,EAAIyB,MAAM,GAAGrB,EAAG,WAAW,CAACK,YAAY,uBAAuBH,MAAM,CAAC,SAAWN,EAAIoF,kBAAkB,KAAO,KAAK,QAAUpF,EAAIqF,mBAAmBhE,GAAG,CAAC,MAAQ,SAAS0D,GAAQ,OAAO/E,EAAIsF,kBAAkB,CAAClF,EAAG,OAAO,CAACJ,EAAIU,GAAGV,EAAIwB,GAAGxB,EAAIuF,yBAA0BvF,EAAIkF,mBAAmBlF,EAAIwF,aAAcpF,EAAG,YAAY,CAACE,MAAM,CAAC,MAAQ,MAAMN,EAAIyB,MAAM,GAAIzB,EAAIyF,aAAa/I,OAAO,EAAG0D,EAAG,eAAe,CAACE,MAAM,CAAC,KAAON,EAAIyF,eAAe,CAACrF,EAAG,WAAW,CAACK,YAAY,eAAeH,MAAM,CAAC,KAAO,KAAK,QAAU,cAAc,CAACF,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,WAAW,cAAc,UAAUN,EAAIU,GAAG,aAAa,IAAI,GAAGV,EAAIyB,KAAMzB,EAAIyF,aAAa/I,OAAO,EAAG0D,EAAG,WAAW,CAACK,YAAY,eAAeH,MAAM,CAAC,KAAO,KAAK,QAAU,aAAae,GAAG,CAAC,MAAQrB,EAAI0F,eAAe,CAAC1F,EAAIU,GAAG,aAAaV,EAAIyB,MAAM,GAAGrB,EAAG,UAAU,CAACE,MAAM,CAAC,SAAW,OAAO,gBAAgB,OAAO,MAAQ,GAAG,MAAQN,EAAIyF,iBAAiB,KAAKzF,EAAIyB,MAAM,GAAGrB,EAAG,QAAQ,CAACE,MAAM,CAAC,KAAO,IAAI,GAAK,MAAM,CAACF,EAAG,OAAO,CAACK,YAAY,uBAAuB,CAACT,EAAIU,GAAG,oBAAoBN,EAAG,cAAc,CAACK,YAAY,UAAU,CAACL,EAAG,aAAa,CAACK,YAAY,kBAAkBH,MAAM,CAAC,QAAUN,EAAI2F,WAAW5E,MAAM,CAAChC,MAAOiB,EAAS,MAAEgB,SAAS,SAAUC,GAAMjB,EAAIe,MAAME,GAAKE,WAAW,YAAY,IAAI,IAAI,IAAI,IAC5sL,EAAkB,G,wXC4KtB,WACA,QACA,GACE,KAAF,YACE,KAAF,WACI,MAAJ,CACM,IAAN,KACM,YAAN,EACM,mBAAN,EAEM,SAAN,KAEM,WAAN,gBACM,aAAN,gBACM,cAAN,KAEM,cAAN,EACM,aAAN,EACM,mBAAN,EACM,kBAAN,KAEMqE,cAAc,EACdL,oBAAoB,EAEpBF,eAAgB,OAChBM,qBAAsB,cAEtBL,mBAAmB,EAGnB,OAAN,CACA,CAAQ,MAAR,OAAQ,KAAR,SAEM,eAAN,KACM,+BAAN,KACM,YAAN,KACM,oBAAN,KAEM,IAAN,4DACM,aAAN,GACM,cAAN,GACM,QAAN,CACA,CAAQ,MAAR,EAAQ,KAAR,UACA,CAAQ,MAAR,EAAQ,KAAR,WACA,CAAQ,MAAR,EAAQ,KAAR,eACA,CAAQ,MAAR,EAAQ,KAAR,iBACA,CAAQ,MAAR,EAAQ,KAAR,gBACA,CAAQ,MAAR,8BAAQ,KAAR,UAEM,eAAN,CACQ,KAAR,CACU,KAAV,aACU,MAAV,EACU,gBAAV,GAEQ,eAAR,IACQ,QAAR,EACQ,iBAAR,EACQ,aAAR,EACQ,MAAR,EACQ,YAAR,EACQ,mBAAR,EACQ,OAAR,UACQ,eAAR,EACQ,yBAAR,EACQ,MAAR,UACQ,UAAR,CAAU,KAAV,gBACQ,YAAR,CACU,gBAAV,IAGM,UAAN,CACQ,KAAR,kBACQ,eAAR,IACQ,QAAR,EACQ,iBAAR,EACQ,aAAR,EACQ,MAAR,EACQ,YAAR,EACQ,mBAAR,EACQ,OAAR,UACQ,eAAR,EACQ,yBAAR,EACQ,MAAR,UACQ,UAAR,CAAU,KAAV,gBACQ,YAAR,CACU,gBAAV,MAKE,QAAF,WACI,IAAJ,OACI,MAAJ,SACI,KAAJ,iBACM,QAAN,WAEI,KAAJ,wBAGM,GADA,QAAN,uBACA,2BAGQ,OAFA,EAAR,oBACQ,QAAR,OAEA,oCACQ,QAAR,aAIM,MAAN,kBACA,qDACA,CACQ,UAAR,OACQ,WAAR,MACQ,UAAR,eAGM,IAAN,8BACA,GACQ,EAAR,qBAEM,IAAN,gBACA,kCAEM,EAAN,4DACM,EAAN,6DACM,IAAN,oBACM,EAAN,uCAGI,KAAJ,6BACM,QAAN,yBACM,EAAN,qBACM,EAAN,eACA,sBACQ,EAAR,mCACQ,EAAR,sBACQ,IACR,KACU,KAAV,wBAEA,iBACQ,EAAR,sBACQ,EAAR,oBAIE,QAAF,CACI,qBAAJ,GACM,MAAN,qBACA,EACA,CACQ,UAAR,OACQ,WAAR,MACQ,UAAR,eAIM,IAAN,gBACA,kCAEM,EAAN,4DACM,EAAN,6DACM,IAAN,oBACM,KAAN,sCAEI,kBACE,GAAN,uBACQ,KAAR,uBACQ,IACE,KAAV,sEACU,KAAV,2CACU,KAAV,cACU,KAAV,kDACU,QAAV,gBACA,UACA,gCACY,MAAZ,iDAGU,QAAV,eAGQ,KAAR,SACQ,KAAR,YAGI,uBACE,GAAN,UACQ,QAAR,4BACQ,IACE,KAAV,sEACU,KAAV,2CACU,KAAV,cACU,KAAV,+CACU,KAAV,eACA,SACU,QAAV,UACA,gCACY,MAAZ,oDAMI,SACE,GAAN,kBAyBQ,MAAR,qCAxBQ,GAAR,iBAkBU,KAAV,4BAAY,QAAZ,sBAlBA,CACU,MAAV,gBACU,QAAV,OACU,KAAV,iCACU,KAAV,uBAAY,KAAZ,EACY,KAAZ,CACc,kBAAd,uBACc,cAAd,CAAgB,MAAhB,oBAAgB,WAAhB,0BACc,gBAAd,2CACc,UAAd,kBACc,aAAd,WACc,QAAd,4BAGU,KAAV,eACU,KAAV,sBACU,KAAV,wBAYI,eACE,IAAN,wBACQ,GAAR,iBAsBU,KAAV,4BAAY,QAAZ,sBAtBA,CACU,MAAV,gBACU,QAAV,OACU,KAAV,gCACU,KAAV,uBAAY,KAAZ,EACY,KAAZ,CACc,aAAd,EACc,kBAAd,uBACc,cAAd,CAAgB,MAAhB,oBAAgB,WAAhB,0BACc,gBAAd,2CACc,UAAd,kBACc,aAAd,WACc,QAAd,4BAGU,KAAV,eACU,KAAV,gBACU,KAAV,4BAGU,WAAV,4BASI,eACEjF,KAAKwF,aAAe,IAEtB,iBACE,QAAN,oBACM,KAAN,iBAEI,gBACE,QAAN,qBACM,KAAN,gBACA,kBACA,6BAEI,kBACE,QAAN,gDACM,KAAN,wFACM,KAAN,qDAEI,gBACE,QAAN,yCACM,KAAN,6FAKE,SAAF,CACI,uBACE,OAAN,oBAEI,OAEE,OADA,QAAN,4DACA,wDAEI,cAEE,OADA,QAAN,yCACA,+DAEI,cACE,MAAN,+GAEI,oBACE,MAAN,sHAGE,MAAF,CACI,IAAJ,SCpe6V,ICQzV,G,UAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,OAIa,I,QCaf,GACEnH,KAAM,MACNsH,WAAY,CACVC,KAAJ,EAEIC,UAAJ,GAEE,OACE,MAAJ,CACM,SAAN,EACM,QAAN,OAGE,QAAF,WACI,KAAJ,qCAAM,QAAN,WAEE,QAAF,CACI,UAAJ,GACM,OAAN,kBACA,4BAEA,0BAGI,kBACE,KAAN,iCACM,QAAN,yBC1D6U,KCQzU,I,UAAY,eACd,GACA,EACA,GACA,EACA,KACA,WACA,OAIa,M,QCAf,IACExH,KAAM,MACNsH,WAAY,CACVG,UAAJ,EACIC,UAAJ,EACIC,IAAJ,KCxB8T,MCQ1T,I,UAAY,eACd,GACAlG,EACAQ,GACA,EACA,KACA,KACA,OAIa,U,2iDCnBf,yBAAsjB,EAAG,G,oCCAzjB,wMAcA,MAAM2F,EAAa,IAAIC,OACvBC,OAAOC,SAASC,UAAUC,aAAaC,iBAAkB,EACzDC,EAAOL,OAASA,OAChBK,EAAOC,GAAKA,EACZ,MAAMC,EAAiBC,IAAS,wBAAyB,CACvDC,cAAc,EACdC,kBAAmB,MAErB,IAAIC,EAAW,IAAIC,IAAmBL,GAEtCM,aAAIrK,UAAUsK,YAAchB,EAC5Be,aAAIrK,UAAUuK,UAAYJ,EAC1BE,aAAIrK,UAAUwK,QAAUT,EACxBM,aAAIrK,UAAUyK,OAASC,IAEvBL,aAAInG,UAAU,cAAeyG,KAC7BN,aAAIO,IAAIC,KAERR,aAAIO,IAAIE,QAERT,aAAIO,IAAIG,QACRV,aAAIW,OAAOC,eAAgB,EAE3B,IAAInB,EAAI,IAAIO,aAAI,CACdlH,OAAQ+H,GAAKA,EAAEC,UACdC,OAAO,S,4oCCvCH,MAAMC,EAAa,SACbC,EAAkB,2BAClBC,EAAsB,wBACtBC,EAAsB,EAGtBC,EAAc,w4bAmYdC,EAAa,8udCxY1B,IAAIC,EAAWC,EAAQ,QAAeC,GAEvB,MAAMtC,EACjBuC,eACAC,cAAcvG,GAEV,OADAnC,KAAKmC,UAAYA,EACVnC,KAEX2I,oBACI3I,KAAK4I,aAAc,EACnB5I,KAAK6I,sBAAsB7I,KAAK8I,UAEpCC,qBACI/I,KAAK4I,aAAc,EACnB5I,KAAK6I,sBAAsB7I,KAAK8I,UAEpCE,UACI,OAAOhJ,KAAK4D,IAEhBqF,mBACIC,IAAOlJ,KAAK4D,KACZ,IAAIuF,EAAM,GACV,IAAK,IAAIC,KAASpJ,KAAK4D,IAAIQ,OACvB+E,EAAIpM,KAAK,CAAC+B,MAAOsK,EAAM/K,KAAMgL,KAAMD,EAAM/K,OAE7C,OAAO8K,EAEXG,yBAAyBC,GACrBL,IAAOK,GACP,IAAI/E,EAAc,GACjB,IAAI,IAAIgF,KAAcxJ,KAAK4D,IAAIY,YACbgF,EAAWC,MAAMF,GAChB/E,EAAYzH,KAAK,CAACsM,KAAMG,EAAWE,GAAI5K,MAAQ,GAAE0K,EAAWG,SAGhF,OAAOnF,EAEXoF,0BACI,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUhK,KAAK4D,IAAIQ,SAClD6F,EAAoBH,KAAKC,MAAMD,KAAKE,UAAUhK,KAAK4D,IAAIY,cACvD0F,EAAa,IAAIC,IACjBC,EAAkB,GACtB,IAAI,IAAIZ,KAAcxJ,KAAK4D,IAAIY,YACxBgF,EAAWC,MAAQD,EAAWE,KAC7BQ,EAAWG,IAAIb,EAAWC,MAC1BW,EAAgBZ,EAAWC,MAAQD,GAI3C,IAAK,IAAIA,KAAcxJ,KAAK4D,IAAIY,YAC5B,GAAGgF,EAAWC,MAAQD,EAAWE,IAAMQ,EAAWI,IAAId,EAAWE,IAE7D,IAAK,IAAIN,KAASpJ,KAAK4D,IAAIQ,OACvB,GAAGgF,EAAM/K,MAAQmL,EAAWE,GAAG,CAC3B,IAAIa,EAAaT,KAAKC,MAAMD,KAAKE,UAAUZ,IAE3CmB,EAAWlM,KAAQ,SAAQ+K,EAAM/K,KAAKmM,UAAUhB,EAAWC,KAAKe,SAChEX,EAAa9M,KAAKwN,GAGlB,IAAK,IAAIE,KAAeR,EACpB,GAAGQ,EAAYhB,MAAQD,EAAWC,MAAQgB,EAAYf,IAAMF,EAAWE,IAAOe,EAAYd,QAAUH,EAAWG,OAAO,CAClHM,EAAkBtM,OAAOsM,EAAkBS,QAAQD,GAAa,GAChE,MAGR,IAAIE,EAAuBb,KAAKC,MAAMD,KAAKE,UAAUR,IACrDmB,EAAoBjB,GAAKa,EAAWlM,KACpC,IAAIuM,EAAoBd,KAAKC,MAAMD,KAAKE,UAAUI,EAAgBZ,EAAWE,MAC7EkB,EAAkBnB,KAAOc,EAAWlM,KAEpC4L,EAAkBlN,KAAK4N,GACvBV,EAAkBlN,KAAK6N,GAKvC5K,KAAK4D,IAAIiG,aAAeA,EACxB7J,KAAK4D,IAAIqG,kBAAoBA,EAEjCpB,sBAAsBC,GAClB9I,KAAK8I,SAAWA,EAChB9I,KAAK6K,gBAAmB,IAAIV,IAC5BnK,KAAK8K,oBAAqB,IAAIX,IAC9BnK,KAAK+K,aAAe,KACpB/K,KAAKgL,cAAiB,KACtBhL,KAAKiL,uBAAyB,KAC9BjL,KAAK4J,0BACL,IAAI,IAAIJ,KAAcxJ,KAAK4D,IAAIY,YACxBgF,EAAW0B,QACV1B,EAAW0B,MAAQ,SAG3B,IAAI,IAAI9B,KAASpJ,KAAK4D,IAAIQ,OACnBgF,EAAM8B,QACL9B,EAAM8B,MAAQ,SAItB,OADAC,QAAQjI,IAAIlD,MACLA,KAEXoL,kBAAkBJ,KAGThL,KAAK+K,cAAiBC,EAAcK,OAAgC,GAAvBL,EAAcK,SAC5DrL,KAAK+K,aAAgB/K,KAAKsL,qBAC1BtL,KAAKgL,cAAgB,KACrBhL,KAAKiL,uBAAyB,MAGlCjL,KAAKgL,cAAiBA,EAEtBG,QAAQjI,IAAI8H,GACZ,IACIO,EADA5B,EAAS3J,KAAKgL,cAAcrB,OAG3B6B,EAAe,EACnB,IAAK,IAAIhC,KAAcxJ,KAAK4D,IAAIY,YAAY,CACzC,GAAIgF,EAAWC,MAAMzJ,KAAK+K,cAAiB,UAASvB,EAAWG,QAAYA,EAAO,CAC9EH,EAAW0B,MAAQ,MACnBlL,KAAK+K,aAAevB,EAAWE,GAC/B,MAEJ8B,IAEJ,IAAI,IAAIpC,KAASpJ,KAAK4D,IAAIQ,OAClBgF,EAAM/K,MAAQ2B,KAAK+K,eACnB3B,EAAM8B,MAAQ,MACdK,EAAmBnC,GAW3B,OARGpJ,KAAK8K,oBAAoBR,IAAIkB,GAC5BxL,KAAKyL,gBAAiB,EAEtBzL,KAAKyL,gBAAiB,EAE1BzL,KAAK8K,oBAAoBT,IAAImB,GAC7BxL,KAAK6K,gBAAgBR,IAAIkB,GACzBJ,QAAQjI,IAAIlD,KAAK+K,cACV/K,KAEX0L,cACI,IAAI1L,KAAK4I,YAAY,CACb,IAAI+C,EAAO,GACX,IAAI,IAAIpP,EAAE,EAAIA,EAAGyD,KAAKgL,cAAcK,MAAO9O,IAAI,CAC3C,IAAIqP,EAAa5L,KAAKgL,cAAca,KAAKtP,GACzCoP,EAAK5O,KAAK6O,EAAWE,KAAK9I,MAAM,WAAW,IAG/C,GADAmI,QAAQjI,IAAK,iBAAelD,KAAKyL,eAAgB,MAAM,OACpDzL,KAAKgL,eAAwC,GAAvBhL,KAAKyL,eAAuB,CAC7C,IAAItC,EAAO,CAEP,YAAanJ,KAAK8I,SAClB,UAAW9I,KAAK+K,aAChB,SAAUY,EAEV,cAAe3L,KAAKgL,cAAce,WAClC,aAAc/L,KAAKgL,cAAcgB,YAAYhM,KAAKgL,cAAciB,WAAWC,QAAQ,IAGvF,OADAlM,KAAKgL,cAAiB,KACf7B,EAEP,OAAO,KAGnB,GAAGnJ,KAAKgL,cAAc,CAMlB,GALAhL,KAAKgL,cAAcrB,OAAQ,CAAC3J,KAAKgL,cAAcrB,OAAO3G,MAAM,WAAW,IACpEhD,KAAKiL,yBACJjL,KAAKgL,cAAcrB,OAAS3J,KAAKiL,uBAAuBtB,OAAOwC,OAAOnM,KAAKgL,cAAcrB,SAE7FwB,QAAQjI,IAAK,iBAAelD,KAAKyL,eAAgB,MAAM,OACpDzL,KAAKgL,eAAwC,GAAvBhL,KAAKyL,eAAuB,CACrC,IAAItC,EAAO,CAEP,YAAa,cACb,UAAWnJ,KAAK+K,aAChB,SAAU/K,KAAKgL,cAAcrB,OAC7B,cAAe3J,KAAKgL,cAAce,WAClC,aAAc/L,KAAKgL,cAAcgB,YAAYhM,KAAKgL,cAAciB,WAAWC,QAAQ,IAIvF,OAFAlM,KAAKiL,uBAAyBjL,KAAKgL,cACnChL,KAAKgL,cAAiB,KACf7B,EAIP,OAFAnJ,KAAKiL,uBAAyBjL,KAAKgL,cACnChL,KAAKgL,cAAiB,KACf,KAIpC,OAAO,KAGNoB,QAAQxI,GAUJ,OATA5D,KAAK4D,IAAMkG,KAAKC,MAAMnG,GAEtBsF,IAAOlJ,KAAK4D,IAAIyI,GAAI,YACpBnD,IAAOlJ,KAAK4D,IAAIQ,OAAQ,gBACxB8E,IAAOlJ,KAAK4D,IAAIY,YAAa,qBAE7B0E,IAAOlJ,KAAK4D,IAAI0I,QAAS,iBAEzBpD,IAAOlJ,KAAK4D,IAAIzB,UAAW,mBACpBnC,KAEXuM,eAAenI,GACX,IAAI+E,EAAM,GACV,IAAI,IAAIC,KAAShF,EACb+E,EAAIpM,KAAK,CAACsB,KAAM+K,EAAM/K,KAAMyN,KAAK1C,EAAM0C,KAAMZ,MAAO9B,EAAM8B,MAAM9B,EAAM8B,MAAO,UAEjF,OAAO/B,EAEXqD,aAKI,OAJArB,QAAQjI,IAAI4G,KAAKE,UAAU,CACvB5F,OAAQpE,KAAK4D,IAAIQ,OACjBI,YAAaxE,KAAK4D,IAAIY,eAEnBsF,KAAKE,UAAU,CAClB5F,OAAQpE,KAAKuM,eAAevM,KAAK4D,IAAIQ,QACrCI,YAAaxE,KAAK4D,IAAIY,cAG9BiI,mBAAmBpO,EAAMqO,EAASlK,GAC9B,IAAImK,EAAqB,GACzB,IAAK,IAAIC,KAAOpK,EAERoK,EAAIvO,MAAoB,YAAZuO,EAAId,MAAsBc,EAAIvO,MAAQuO,EAAIvO,KAAKwO,gBAC3DF,GAAsB,eAC1BC,EAAIvO,gEACsCA,uBAA0BuO,EAAIvO,kDAM5E,OAAOsO,EAEXG,0BACI,IAAIC,EAAgC,GACpC,IAAK,IAAIC,KAAYtQ,OAAOuQ,KAAKjN,KAAK4D,IAAIzB,WACtC4K,GAAiC,uCACjCC,2DAEchN,KAAK4D,IAAIzB,UAAU6K,GAAUN,mCAChCM,uDAGfhN,KAAKyM,mBAAmBzM,KAAK4D,IAAIzB,UAAU6K,GAAU3O,KAAM2B,KAAK4D,IAAIzB,UAAU6K,GAAUN,QAAS1M,KAAKmC,UAAUnC,KAAK4D,IAAIzB,UAAU6K,GAAU3O,gBAG7I,OAAO0O,EAGXG,qCACI,IAAIC,EAAa,GACjB,IAAK,IAAIH,KAAYtQ,OAAOuQ,KAAKjN,KAAK4D,IAAIzB,WACtCgL,GAAc,QAAOH,WAAkBA,oBAE3C,OAAOG,EAEXC,uBAAuBC,GACnB,IAAIlE,EAAO,GACX,IAAK,IAAI6D,KAAYtQ,OAAOuQ,KAAKI,GAC7B,IAAK,IAAIC,KAAOD,EAAKL,GACjB7D,GAAQ,UAASmE,2CAA6CN,KAAYM,qCAC5DA,sEACkCA,yCAA2CnF,sEAC9DmF,gCAGrC,OAAOnE,EAEXoE,8BAA8B5D,GAC1B,IAAI6D,EAAiB,GACjBC,EAAkB,GACtB,IAAK,IAAIjE,KAAcxJ,KAAK4D,IAAIY,YAC5B,GAAGmF,GAAUH,EAAWG,OAEpB,IAAI,IAAIP,KAAUpJ,KAAK4D,IAAIQ,OACnBoF,EAAWC,MAAQL,EAAM/K,MAAQ+K,EAAMsE,WACnCF,EAAezQ,KAAKqM,EAAMsE,WAE9BlE,EAAWE,IAAMN,EAAM/K,MAAQ+K,EAAMsE,WAClCD,EAAgB1Q,KAAKqM,EAAMsE,WAK9C,MAAO,CACH,aAAmB,4EACMF,EAAeG,KAAK,MAAMC,QAAQ,UAAW,uEACtE,cAAkB,8EACQH,EAAgBE,KAAK,MAAMC,QAAQ,UAAW,2EAGhFC,gCACI,IAAIC,EAAW,GACf,IAAK,IAAInE,KAAUjN,OAAOuQ,KAAKjN,KAAK4D,IAAI0I,SAAU,CAC7C,IAAIyB,EAAU/N,KAAKuN,8BAA8B5D,GAClDmE,GAAY,gBAAenE,sHAGSxB,yDACKA,sLAI3B4F,EAAQC,2CACRhO,KAAKoN,uBAAuBpN,KAAK4D,IAAI0I,QAAQ3C,uDACtBxB,sHAEIA,oCACvBnI,KAAKoN,uBAAuBpN,KAAK4D,IAAI0I,QAAQ3C,mNAKjDoE,EAAQE,2HAM1B,OAAOH,EAIXI,yBACI,IAAIC,EAA8B,yHAGXnO,KAAK4D,IAAIyI,yHAK/BrM,KAAKkN,qDACAlN,KAAK4D,IAAIwK,iZASLpO,KAAK4D,IAAIwK,8DACSpO,KAAK4D,IAAIwK,2RAMrBpO,KAAK4D,IAAIwK,6DACEpO,KAAK4D,IAAIwK,qbAatCpO,KAAK6N,qCAEH,OAAOM,EAGXE,gBACI,IAAIlF,EAAO,GACP/E,EAASpE,KAAK8I,UAAUZ,EAAqBlI,KAAK4D,IAAIiG,aAAa7J,KAAK4D,IAAIQ,OAC5EI,EAAexE,KAAK8I,UAAYZ,EAAqBlI,KAAK4D,IAAIqG,kBAAmBjK,KAAK4D,IAAIY,YAC9F,IAAK,IAAI4E,KAAShF,EAAS,CACvB,IAAIkK,EAAO,GACPC,EAAQ,EACZ,IAAK,IAAI/E,KAAchF,EACfgF,EAAWC,MAAQL,EAAM/K,OACzBkQ,IACAD,GACK,sBAAqB9E,EAAWG,mDACjBH,EAAWE,sDACJF,EAAWG,uCAIZ,KAA9B2E,EAAIE,OAAOF,EAAI7R,OAAS,KACxB6R,EAAMA,EAAIG,UAAU,EAAGH,EAAI7R,OAAS,IAEpC0M,GADS,GAAToF,EAEK,cAAanF,EAAM/K,mCACdiQ,+CAKL,YAAWlF,EAAM/K,gEAQ9B,MAHkC,KAA9B8K,EAAIqF,OAAOrF,EAAI1M,OAAS,KACxB0M,EAAMA,EAAIsF,UAAU,EAAGtF,EAAI1M,OAAS,IAEjC0M,EAEXuF,iBACI,IAAIvF,EAAO,GACPwF,EAAQ,GACZ,IAAK,IAAIhF,KAAUjN,OAAOuQ,KAAKjN,KAAK4D,IAAI0I,SACpCqC,EAAM5R,KAAM,UAAS4M,qBAA0BA,KAGnD,OADAR,GAAQ,MAAKwF,EAAMhB,KAAK,UACjBxE,EAEXmC,qBACI,IAAI,IAAIlC,KAASpJ,KAAK4D,IAAIQ,OACtB,GAAiB,WAAdgF,EAAM0C,KACL,OAAO1C,EAAM/K,KAErB6K,KAAO,EAAO,mDAElB0F,qBACI,IAAIC,EAA0B,kGAGvB7O,KAAK4D,IAAIyI,2BACJrM,KAAKsL,+HAKHtL,KAAKqO,0DAENrO,KAAK0O,2BAGlB,OAAOG,EAGXC,mBAEI,IAAIC,EAAe,GAEfC,EAAqB,sSA0BzB,OAfAD,EAAeC,EAAoB,KAC/BhP,KAAK8M,0BAA4B,KACjC9M,KAAKkO,yBAA2B,KAChClO,KAAK4O,qBAHMI,gKAOe,oBAA1BhP,KAAK4D,IAAIwK,kBACDpO,KAAK8I,UAAY9I,KAAK8I,UAAWd,GAAchI,KAAK8I,UAAUb,IAC9D8G,EAAe3G,GAEhBpI,KAAK8I,UAAUZ,IACd6G,EAAe1G,IAGpBC,EAASyG,EAAc,CAC1BE,YAAa,EACbC,sBAAsB,IAI9BC,mB,oCCheJ,yBAA8hB,EAAG,G,wpLCAjiB,yBAAgiB,EAAG","file":"js/app.1596cd92.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([2,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavHeader.vue?vue&type=style&index=0&id=0ffc577c&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavHeader.vue?vue&type=style&index=0&id=0ffc577c&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BotFooter.vue?vue&type=style&index=0&id=7963a89c&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BotFooter.vue?vue&type=style&index=0&id=7963a89c&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('NavHeader'),_c('Tab'),_c('BotFooter')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('footer',{attrs:{\"id\":\"footer\"}},[_c('p',{staticClass:\"text-center\"},[_vm._v(\"© ModCon 2020, the ultimate smart contract model based testing framework\")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <footer id=\"footer\">\n      <p class=\"text-center\">© ModCon 2020,  the ultimate smart contract model based testing framework</p>\n    </footer>\n</template>\n<script>\nexport default {\n  name: \"BotFooter\",\n  props: {\n    msg: String\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#footer {\n   position: fixed;\n   left: 0;\n   bottom: 0;\n   width: 100%;\n   text-align: center;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BotFooter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BotFooter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BotFooter.vue?vue&type=template&id=7963a89c&scoped=true&\"\nimport script from \"./BotFooter.vue?vue&type=script&lang=js&\"\nexport * from \"./BotFooter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BotFooter.vue?vue&type=style&index=0&id=7963a89c&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7963a89c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',{staticClass:\"navbar navbar-default navbar-fixed-top\"},[_c('div',{staticClass:\"container-fluid\"},[_c('div',{staticClass:\"navbar-header\"},[_c('a',{staticClass:\"navbar-brand\",attrs:{\"href\":\"#page-top\"}},[_vm._v(\"ModCon\")])]),_c('div',{staticClass:\"collapse navbar-collapse\",attrs:{\"id\":\"my-navbar-collapse\"}},[_c('ul',{staticClass:\"nav navbar-nav navbar-right\"},[_c('li',{staticClass:\"hidden\"},[_c('a',{attrs:{\"href\":\"#page-top\"}})]),_c('li',[_c('a',{attrs:{\"href\":\"#\"}},[_vm._v(\"About\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#\"}},[_vm._v(\"Publications\")])]),_c('li',[_c('a',{attrs:{\"href\":\"#\"}},[_vm._v(\"People\")])])])])])])}]\n\nexport { render, staticRenderFns }","        <template>\n            <!-- Navigation -->\n        <nav class=\"navbar navbar-default navbar-fixed-top\">\n        <div class=\"container-fluid\">\n        <!-- Brand and toggle get grouped for better mobile display -->\n        <div class=\"navbar-header\">\n                     <a class=\"navbar-brand\" href=\"#page-top\">ModCon</a>\n        </div>\n\n        <!-- Collect the nav links, forms, and other content for toggling -->\n        <div class=\"collapse navbar-collapse\" id=\"my-navbar-collapse\">\n        <ul class=\"nav navbar-nav navbar-right\">\n            <li class=\"hidden\"><a href=\"#page-top\"></a></li>\n            <li><a href=\"#\">About</a></li>\n            <!--li><a href=\"#under\">Under the Hood</a></li-->\n            <li><a href=\"#\">Publications</a></li>\n            <li><a href=\"#\">People</a></li>\n        </ul>\n        </div>\n        </div>\n        </nav>\n       \n </template>\n<script>\n    export default {\n    name: \"NavHeader\",\n    props: {\n        msg: String\n    }\n    };\n</script>\n<style scoped lang=\"scss\">\n.navbar /deep/ {\n  @import \"~bootstrap-vue/dist/bootstrap-vue\";\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NavHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NavHeader.vue?vue&type=template&id=0ffc577c&scoped=true&\"\nimport script from \"./NavHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./NavHeader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NavHeader.vue?vue&type=style&index=0&id=0ffc577c&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0ffc577c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-card',[_c('b-tabs',{attrs:{\"card\":\"\"},model:{value:(_vm.tabIndex),callback:function ($$v) {_vm.tabIndex=$$v},expression:\"tabIndex\"}},[_c('b-tab',{attrs:{\"title\":\"network\",\"title-link-class\":_vm.linkClass(0),\"active\":\"\"}},[_c('b-form',[_c('label',[_vm._v(\" choose blockchain networks\")]),_c('b-form-select',{staticClass:\"mb-3\",attrs:{\"id\":\"inline-form-custom-select-contract-abi\"},on:{\"change\":_vm.OnSelectnetwork},model:{value:(_vm.network),callback:function ($$v) {_vm.network=$$v},expression:\"network\"}},[_c('b-form-select-option',{attrs:{\"value\":null}},[_vm._v(\"network\")]),_c('b-form-select-option',{attrs:{\"value\":\"fisco-bcos\"}},[_vm._v(\"FISCO-BCOS\")]),_c('b-form-select-option',{attrs:{\"value\":\"ethereum\"}},[_vm._v(\"Ethereum\")])],1),(_vm.network)?_c('span',[_vm._v(\"current network: \"+_vm._s(_vm.network))]):_vm._e()],1)],1),_c('b-tab',{attrs:{\"title\":\"HOME\",\"title-link-class\":_vm.linkClass(1),\"active\":\"\"}},[_c('Home')],1),_c('b-tab',{attrs:{\"title\":\"TEST\",\"title-link-class\":_vm.linkClass(2)}},[_c('ModelTest')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('b-card',{staticClass:\"mt-3\",attrs:{\"header\":\"ModCon: The Model-based Testing Platforms for Smart Contract.\",\"header-class\":\"lg\",\"header-bg-variant\":\"light\",\"header-text-variant\":\"default\"}},[_c('b-form',[_c('b-form-group',{attrs:{\"id\":\"input-group-1\",\"label-align\":\"left\",\"label\":\"Contracts(.sol):\",\"label-for\":\"input-select-upload\",\"description\":\"We'll never share your software asset with anyone else.\"}},[_c('b-form-file',{attrs:{\"id\":\"input-select-upload\",\"state\":Boolean(_vm.file),\"accetpt\":\".sol\",\"placeholder\":\"Choose smart contract or drop it here...\",\"drop-placeholder\":\"Drop file here...\",\"multiple\":\"\"},on:{\"change\":_vm.onFileChange},model:{value:(_vm.files),callback:function ($$v) {_vm.files=$$v},expression:\"files\"}})],1),(_vm.status_upload_start)?_c('b-progress',{attrs:{\"value\":_vm.value*100/_vm.files.length,\"variant\":\"success\"}}):_vm._e(),_c('b-button',{staticClass:\" mr-1\",attrs:{\"variant\":_vm.variant_upload,\"disabled\":_vm.disable_upload},on:{\"click\":_vm.OnUpload}},[_c('b-icon',{attrs:{\"icon\":\"cloud-upload\",\"scale\":\"1\",\"aria-hidden\":\"true\"}}),_c('span',[_vm._v(\" Upload \")])],1),_c('b-button',{staticClass:\"mr-1\",attrs:{\"variant\":_vm.variant_compile,\"disabled\":_vm.disable_compile},on:{\"click\":_vm.OnCompile}},[_c('span',[_vm._v(\"Compile\")]),(_vm.status_compile)?_c('b-icon',{attrs:{\"icon\":\"check2\"}}):_vm._e(),(_vm.status_compile_start)?_c('b-spinner',{attrs:{\"small\":\"\"}}):_vm._e()],1),(_vm.status_compile)?_c('b-form',{staticClass:\"mt-3\",attrs:{\"inline\":\"\"}},[_c('label',{staticClass:\"mr-sm-2\",attrs:{\"for\":\"inline-form-custom-select-contract\"}},[_vm._v(\"contract \")]),_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0\",attrs:{\"id\":\"inline-form-custom-select-contract\",\"options\":_vm.contracts},on:{\"change\":_vm.OnSelectContract},model:{value:(_vm.selected_contract),callback:function ($$v) {_vm.selected_contract=$$v},expression:\"selected_contract\"}}),(_vm.selected_contract)?_c('label',{staticClass:\"mr-sm-2\",attrs:{\"for\":\"inline-form-custom-select-contract-address\"}},[_vm._v(\"address \")]):_vm._e(),(_vm.selected_contract)?_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0\",attrs:{\"id\":\"inline-form-custom-select-contract-address\",\"options\":_vm.contract_addresses},model:{value:(_vm.selected_address),callback:function ($$v) {_vm.selected_address=$$v},expression:\"selected_address\"}}):_vm._e(),(_vm.selected_contract)?_c('label',{staticClass:\"mr-sm-2\",attrs:{\"for\":\"inline-form-custom-select-contract-abi\"}},[_vm._v(\"abi \")]):_vm._e(),(_vm.selected_contract)?_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0\",attrs:{\"id\":\"inline-form-custom-select-contract-abi\",\"options\":_vm.abis},on:{\"change\":_vm.OnChangeAbi},model:{value:(_vm.selected_abi),callback:function ($$v) {_vm.selected_abi=$$v},expression:\"selected_abi\"}}):_vm._e()],1):_vm._e(),_vm._l((_vm.selected_abi),function(value,name){return _c('div',{key:name,staticClass:\"mt-2\"},[_c('b-form-group',{attrs:{\"label-cols-sm\":\"3\",\"label\":(\"\" + name),\"label-align-sm\":\"right\",\"label-for\":(\"\" + name)}},[(_vm.selected_abi)?_c('b-form-input',{ref:(\"\" + name),refInFor:true,staticClass:\"mr-sm-2\",attrs:{\"plaintext\":_vm.readonly((\"\" + name)),\"id\":(\"\" + name),\"type\":(\"\" + value),\"placeholder\":(\"\" + value),\"disabled\":_vm.readonly((\"\" + name))}}):_vm._e()],1)],1)}),(_vm.status_compile)?_c('b-button',{staticClass:\"mt-2\",attrs:{\"disabled\":!_vm.selected_abi,\"block\":\"\",\"variant\":\"outline-primary\"},on:{\"click\":_vm.OnDeploy}},[_vm._v(\" \"+_vm._s(_vm.selected_abi?_vm.selected_abi.name==_vm.selected_contract.split(\".sol\")[0]?\"Deploy\":\"SendTx\":\"Deploy Or SendTransaction\"))]):_vm._e(),_c('b-card',{staticClass:\"mt-3\",attrs:{\"header\":\"Result\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.log)}})])],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <b-card class=\"mt-3\" header=\"ModCon: The Model-based Testing Platforms for Smart Contract.\"  header-class= \"lg\"   header-bg-variant=\"light\" header-text-variant=\"default\">\n      <b-form>\n        <!-- <span> current network:{{$fsmservice.network}} </span> -->\n        <b-form-group id=\"input-group-1\" label-align=\"left\" label=\"Contracts(.sol):\" label-for=\"input-select-upload\"\n          description=\"We'll never share your software asset with anyone else.\">\n          <b-form-file id=\"input-select-upload\" v-model=\"files\" :state=\"Boolean(file)\" accetpt=\".sol\"\n            placeholder=\"Choose smart contract or drop it here...\" drop-placeholder=\"Drop file here...\"\n            @change=\"onFileChange\" multiple>\n          </b-form-file>\n        </b-form-group>\n        <b-progress :value=\"value*100/files.length\" variant=\"success\" v-if=\"status_upload_start\"></b-progress>\n        <!-- <b-table striped hover :items=\"selected\"></b-table> -->\n        <b-button :variant=\"variant_upload\" :disabled=\"disable_upload\" @click=\"OnUpload\" class=\" mr-1\"> \n                <b-icon   icon=\"cloud-upload\" scale=\"1\" aria-hidden=\"true\"> </b-icon>\n                <span> Upload </span>\n        </b-button>\n        <!-- <b-table striped hover :items=\"uploaded\"></b-table> -->\n        <b-button :variant=\"variant_compile\" :disabled=\"disable_compile\" @click=\"OnCompile\" class=\"mr-1\"> \n                <span>Compile</span>\n                <b-icon   icon=\"check2\" v-if=\"status_compile\"> </b-icon>\n                <b-spinner small   v-if = \"status_compile_start\"></b-spinner>\n          <!-- Compile -->\n        </b-button>\n        <!-- <b-table striped hover :items=\"compiled\"></b-table> -->\n        <b-form class=\"mt-3\" inline v-if=\"status_compile\">\n          <label class=\"mr-sm-2\" for=\"inline-form-custom-select-contract\">contract </label>\n          <b-form-select id=\"inline-form-custom-select-contract\" v-model=\"selected_contract\" :options=\"contracts\"\n            class=\"mb-2 mr-sm-2 mb-sm-0\" @change=\"OnSelectContract\"></b-form-select>\n\n          <label v-if=\"selected_contract\" class=\"mr-sm-2\" for=\"inline-form-custom-select-contract-address\">address\n          </label>\n          <b-form-select id=\"inline-form-custom-select-contract-address\" v-model=\"selected_address\"\n            :options=\"contract_addresses\" class=\"mb-2 mr-sm-2 mb-sm-0\" v-if=\"selected_contract\"></b-form-select>\n\n          <label v-if=\"selected_contract\" class=\"mr-sm-2\" for=\"inline-form-custom-select-contract-abi\">abi </label>\n          <b-form-select id=\"inline-form-custom-select-contract-abi\" v-model=\"selected_abi\" :options=\"abis\"\n            class=\"mb-2 mr-sm-2 mb-sm-0\" v-if=\"selected_contract\" @change=\"OnChangeAbi\"></b-form-select>\n        </b-form>\n\n        <div class=\"mt-2\" v-for=\"(value, name) in selected_abi\" v-bind:key=\"name\">\n          <b-form-group label-cols-sm=\"3\" :label=\"`${name}`\" label-align-sm=\"right\" :label-for=\"`${name}`\">\n            <b-form-input v-if=\"selected_abi\" :plaintext=\"readonly(`${name}`)\" class=\"mr-sm-2\" :id=\"`${name}`\"\n              :ref=\"`${name}`\" :type=\"`${value}`\" :placeholder=\"`${value}`\" :disabled=\"readonly(`${name}`)\">\n            </b-form-input>\n          </b-form-group>\n        </div>\n        <b-button v-if=\"status_compile\"  :disabled=\"!selected_abi\" block variant=\"outline-primary\" @click=\"OnDeploy\" class=\"mt-2\">  {{selected_abi?selected_abi.name==selected_contract.split(\".sol\")[0]?\"Deploy\":\"SendTx\":\"Deploy Or SendTransaction\"}}</b-button>\n        <!-- <b-table striped hover :items=\"deployed\"></b-table> -->\n        <b-card class=\"mt-3\" header=\"Result\">\n          <span v-html=\"log\"></span>\n        </b-card>\n      </b-form>\n    </b-card>\n  </div>\n</template>\n\n\n<script>\n  const event_Upload = \"Upload\";\n  const event_Compile = \"Compile\";\n  const event_Deploy = \"Deploy\";\n  const event_Transaction = \"Transaction\";\n  const event_Call = \"Call\";\n  const client_Upload = \"Upload_client\";\n  const client_Compile = \"Compile_client\";\n  const client_Deploy = \"Deploy_client\";\n  const client_Transaction = \"Transaction_client\";\n  const client_Call = \"Call_client\";\n  export default {\n    name: \"Home\",\n    data: function () {\n      return {\n        object: {\n          title: 'How to do lists in Vue',\n          author: 'Jane Doe',\n          publishedAt: '2016-04-10',\n          hello: 'How to do lists in Vue',\n          world: 'Jane Doe',\n          int: '2016-04-10'\n        },\n        selected: [],\n        files: [],\n        // if upload complete\n        status_upload: false,\n        // if upload start\n        status_upload_start : false,\n        value : 0,\n\n        // if compile complete\n        status_compile: false,\n       // if compile start\n        status_compile_start: false,\n\n        status_deploy: false,\n        options: [],\n        contracts: [],\n        contract_addresses: [], \n        selected_contract: null,\n        selected_abi: null,\n        selected_address: null,\n        log: \"\",\n        server_data: null,\n        addresses: {}\n      };\n    },\n    created: function () {\n\n      console.log(`network:`, this.network);\n\n      // lisent server event\n      var obj = this;\n      this.$socket.on(event_Compile, function (data) {\n        console.log(data);\n        obj.status_compile = true;\n        // obj.log += \"<br>\" + event_Compile + \" done\";\n        obj.$fsmservice.add_contracts(data);\n        if (!obj.server_data)\n          obj.server_data = {};\n        obj.server_data[event_Compile] = data;\n        obj.status_compile= true;\n        obj.status_compile_start = false;\n      });\n      this.$socket.on(event_Upload, function (data) {\n        if (!obj.server_data)\n          obj.server_data = {};\n        obj.server_data[event_Upload] = data;\n      });\n      this.$socket.on(event_Deploy, function (data) {\n        console.log(event_Deploy, data);\n        obj.status_deploy = true;\n        obj.log += \"<br>\" + event_Deploy + \": \" + data.name + \"-\" + data.address;\n        if (!obj.addresses[data.name]) {\n          obj.addresses[`${data.name}`] = [];\n        }\n        obj.addresses[`${data.name}`].push(`${data.address}`);\n        console.log(\"hello world,\", obj.contract_addresses[0]);\n        if (obj.contract_addresses[0].value==\"0x\"){\n            obj.contract_addresses = [{\n                value: data.address,\n                text: data.address\n            }];\n        }else {\n            obj.contract_addresses.push({\n                value: data.address,\n                text: data.address\n            });\n        }\n\n        if (!obj.server_data)\n          obj.server_data = {};\n        obj.server_data[event_Deploy] = data;\n      });\n      this.$socket.on(event_Transaction, function (data) {\n        obj.log += \"<br>\" + event_Transaction + \": \" + JSON.stringify(data);\n        if (!obj.server_data)\n          obj.server_data = {};\n        obj.server_data[event_Transaction] = data;\n      });\n      this.$socket.on(event_Call, function (data) {\n        if (!obj.server_data)\n          obj.server_data = {};\n        obj.server_data[event_Call] = data;\n      });\n    \n     this.$uploader.addEventListener(\"complete\", function (event) {\n        console.log(event.file.name, \" has uploaded\");\n        // console.log(obj.selected);\n        obj.status_upload = true;\n        // obj.log += \"<br>\" + \"upload\" + \" done\";\n        obj.value += 1;\n      });\n      this.$uploader.addEventListener(\"progress\", function(event){\n        console.log(event, \"upload in progress\");\n      });\n\n    },\n    methods: {\n      onFileChange(e) {\n        this.value = 0;\n        var files = e.target.files || e.dataTransfer.files;\n        if (!files.length)\n          return;\n        // console.log(files);\n        this.selected = [];\n        for (var file of files) {\n          this.selected.push({\n            contract: file.name\n          });\n        }\n        this.files = files;\n        this.status_upload = false;\n        this.status_compile = false;\n        this.status_deploy = false;\n        \n        this.status_upload_start = false;\n        this.status_compile_start = false;\n      },\n      OnUpload() {\n        // this.log += \"<br> uploaded contracts to server:\" + JSON.stringify(this.selected);\n        this.$socket.emit(\"client\", {\n          type: client_Upload,\n          data: this.selected\n        });\n        this.$uploader.submitFiles(this.files);\n        this.status_upload_start = true;\n      },\n      OnCompile() {\n        this.$socket.emit(\"client\", {\n          type: client_Compile,\n          data: this.selected\n        });\n        this.status_compile_start = true;\n        // this.log += \"<br> server compiled \" + JSON.stringify(this.selected);\n        for (var instance of this.selected) {\n          this.contracts.push({\n            value: instance.contract,\n            text: instance.contract\n          });\n        }\n      },\n      OnDeploy() {\n        console.log(client_Call);\n        console.log(client_Transaction);\n        if (this.selected_address === \"0x\") {\n          var deployEvent = {\n            type: client_Deploy,\n            data: {\n              contract: this.selected_contract.split(\".sol\")[0],\n              address: this.selected_address,\n              func: this.selected_abi.name + \"(\" + this.selected_abi.inputs + \")\",\n              params: JSON.parse(\"[\" + this.$refs.inputs[0].localValue + \"]\"),\n              network: this.$fsmservice.network\n            }\n          }\n          console.log(deployEvent);\n          this.$socket.emit(\"client\", deployEvent);\n          // this.log += \"<br> server deployed:\" + this.selected_contract;\n        } else {\n          var transactionEvent = {\n            type: client_Transaction,\n            data: {\n              contract: this.selected_contract.split(\".sol\")[0],\n              address: this.selected_address,\n              func: this.selected_abi.name + \"(\" + this.selected_abi.inputs + \")\",\n              params: JSON.parse(\"[\" + this.$refs.inputs[0].localValue + \"]\"),\n              network: this.$fsmservice.network\n            }\n          }\n          console.log(transactionEvent);\n          this.$socket.emit(\"client\", transactionEvent);\n          // this.log += `<br> server will handle transaction from ${this.selected_contract}`;\n        }\n      },\n\n      OnSelectContract(e) {\n        console.log(e);\n        console.log(`address of ${this.selected_contract}:`);\n        console.log(this.addresses);\n        if (undefined == this.addresses[this.selected_contract.split(\".sol\")[0]])\n           this.contract_addresses = [{\n            value: \"0x\",\n            text: \"0x\"\n          }];\n        else {\n          let ret = [];\n          for (let address of this.addresses[this.selected_contract.split(\".sol\")[0]]) {\n            ret.push({\n              value: address,\n              text: address\n            });\n          }\n          this.contract_addresses = ret;\n        }\n\n      },\n      OnChangeAbi(){\n        console.log(this.selected_abi);\n        this.labelDeployAndSendTx = this.selected_abi.name==this.selected_contract.split(\".sol\")[0]?\"Deploy\":\"SendTx\";\n        console.log(this.labelDeployAndSendTx);\n      },\n      types(inputs) {\n        let input_types = [];\n        if (inputs && inputs.length >= 1)\n          for (let input of inputs)\n            input_types.push(input.type);\n        return input_types.join();\n      },\n      readonly(field_name) {\n        //  alert( !(field_name === 'inputs'));\n        return !(field_name === 'inputs');\n      }\n    },\n    computed: {\n      variant_upload: function () {\n        return this.status_upload == false ? \"primary\" : \"success\";\n      },\n      variant_compile: function () {\n        return this.status_upload == false ? \"secondary\" : this.status_compile == false ? \"primary\" : \"success\";\n      },\n      disable_upload: function () {\n        return this.selected.length == 0;\n      },\n      disable_compile: function () {\n        return this.status_upload == false;\n      },\n      // contract_addresses: function () {\n      //   console.log(`address of ${this.selected_contract}:`);\n      //   console.log(this.addresses);\n      //   if (undefined == this.addresses[this.selected_contract.split(\".sol\")[0]])\n      //     return [{\n      //       value: \"0x\",\n      //       text: \"0x\"\n      //     }];\n      //   else {\n      //     let ret = [];\n      //     for (let address of this.addresses[this.selected_contract.split(\".sol\")[0]]) {\n      //       ret.push({\n      //         value: address,\n      //         text: address\n      //       });\n      //     }\n      //     return ret;\n      //   }\n      // },\n      \n      abis: function () {\n        var existConstructorFunction = false;\n        var abis = [];\n        console.log(this.server_data[event_Compile]);\n        console.log(this.server_data[event_Compile][this.selected_contract.split(\".sol\")[0]]);\n        for (var fun of JSON.parse(JSON.stringify(this.server_data[event_Compile][this.selected_contract.split(\".sol\")[0]]))) {\n              if (fun.type == \"function\" || fun.type == \"constructor\") {\n                  if(fun.type == \"constructor\"){\n                        existConstructorFunction = true;\n                  }\n                    fun.inputs = this.types(fun.inputs);\n                    fun.outputs = this.types(fun.outputs);\n                    console.log(fun);\n                    if (fun.name == undefined || fun.name == null || fun.name == \"\") {\n                          fun.name = this.selected_contract.split(\".sol\")[0];\n                          abis.push({\n                            value: fun,\n                            text: this.selected_contract.split(\".sol\")[0]\n                          })\n                    } else {\n                          abis.push({\n                            value: fun,\n                            text: fun.name\n                          })\n                    }\n              }\n        }\n        if(existConstructorFunction==false){\n              abis.push({\n                value:{\n                  name: this.selected_contract.split(\".sol\")[0], \n                  inputs: \"\", \n                  type: \"constructor\"\n                  },\n                text: this.selected_contract.split(\".sol\")[0]\n            });\n        }\n\n        let obj = this;\n        return abis.filter(e =>{\n          return obj.selected_address==\"0x\"?e.value.type==\"constructor\":e.value.type!=\"constructor\";\n        });\n      }\n    },\n    props: {\n      msg: String\n    }\n  };\n</script>\n\n<style scoped lang=\"scss\">\n  .container /deep/ {\n    @import \"~bootstrap-vue/dist/bootstrap-vue\";\n    @import \"~bootstrap/dist/css/bootstrap\";\n  }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=602b3772&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=602b3772&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"602b3772\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',[_c('b-col',{attrs:{\"align-v\":\"center\",\"cols\":\"5\",\"md\":2}},[_c('b-container',[_c('b-form',{attrs:{\"inline\":\"\"}},[_c('span',{staticClass:\"secondary mt-2 mr-2\"},[_vm._v(\"Specification \")]),_c('b-form-group',{staticClass:\"mt-2\",attrs:{\"id\":\"fieldset-1\",\"label\":\"example:\",\"label-for\":\"select_example\"}},[_c('b-form-select',{attrs:{\"id\":\"select_example\",\"options\":_vm.options},on:{\"change\":_vm.OnSelectExample},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)],1)],1),_c('b-container',{class:_vm.zoom,attrs:{\"id\":\"FSMContainer\"},on:{\"mouseover\":_vm.OnMouseOverFSM,\"mouseleave\":_vm.OnMouseOutFSM}},[_c('codemirror',{staticClass:\"MyCodeMirror\",attrs:{\"id\":\"fsm\",\"options\":_vm.cmOptions_json},on:{\"change\":_vm.OnStateMachineChange},model:{value:(_vm.fsm),callback:function ($$v) {_vm.fsm=$$v},expression:\"fsm\"}})],1)],1),_c('b-col',{attrs:{\"align-v\":\"center\",\"cols\":\"5\",\"md\":5}},[_c('span',{staticClass:\"secondary mt-2 mr-2\"},[_vm._v(\"Control Panel \")]),_c('b-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.mouseOverFSM),expression:\"!mouseOverFSM\"}]},[(_vm.fsm)?_c('div',{staticClass:\"container\",staticStyle:{\"width\":\"100%\",\"height\":\"350px\",\"border\":\"solid thin\"},domProps:{\"innerHTML\":_vm._s(_vm.lSVGInAString)}}):_vm._e()]),(_vm.lSVGInAString )?_c('b-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.mouseOverFSM),expression:\"!mouseOverFSM\"}]},[_c('div',{staticClass:\"container\",staticStyle:{\"width\":\"100%\",\"height\":\"450px\"}},[_c('b-row',[_c('b-col',[_c('b-form-group',{staticClass:\"align-baseline text-left\",attrs:{\"label\":\"Strategy\"}},[_c('b-form-radio-group',{attrs:{\"id\":\"strategy-radio-group\",\"name\":\"strategy-radios\",\"stacked\":\"\"},on:{\"input\":_vm.OnCoverStrategy},model:{value:(_vm.covering_strategy),callback:function ($$v) {_vm.covering_strategy=$$v},expression:\"covering_strategy\"}},[_c('b-form-radio',{staticClass:\"text-left mr-3\",attrs:{\"value\":\"States\"}},[_vm._v(\"Cover State\")]),_c('b-form-radio',{staticClass:\"text-left mr-5\",attrs:{\"value\":\"Transitions-Without-Loop\"}},[_vm._v(\"Cover Transition\")]),_c('b-form-radio',{staticClass:\"text-left mr-5\",attrs:{\"value\":\"Transitions-With-Loop\"}},[_vm._v(\"Cover Transition (Loop)\")])],1)],1)],1),_c('b-col',[_c('b-form-group',{staticClass:\"text-left\",attrs:{\"label\":\"Test Case Priority on State/Transition\"}},[_c('b-form',{staticClass:\"mt-2 mb-2\",attrs:{\"inline\":\"\"}},[_c('label',{staticClass:\"mr-sm-2\",attrs:{\"for\":\"inline-form-custom-select-state\"}},[_vm._v(\"State: \")]),_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0 col-sm-2\",attrs:{\"id\":\"inline-form-custom-select-state\",\"options\":_vm.states},model:{value:(_vm.selected_state),callback:function ($$v) {_vm.selected_state=$$v},expression:\"selected_state\"}})],1),_c('b-form',{staticClass:\"mt-2 mb-2\",attrs:{\"inline\":\"\"}},[_c('label',{staticClass:\"mr-sm-2\"},[_vm._v(\"Transition: \")]),_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0 col-sm-2\",attrs:{\"options\":_vm.states},on:{\"change\":_vm.OnTransitions},model:{value:(_vm.selected_transition_startstate),callback:function ($$v) {_vm.selected_transition_startstate=$$v},expression:\"selected_transition_startstate\"}}),_c('span',[_vm._v(\" --> \")]),_c('b-form-select',{staticClass:\"mb-2 mr-sm-2 mb-sm-0  col-sm-2\",attrs:{\"options\":_vm.transitions},model:{value:(_vm.selected_transition),callback:function ($$v) {_vm.selected_transition=$$v},expression:\"selected_transition\"}})],1)],1)],1)],1),_c('b-form',{attrs:{\"inline\":\"\"}},[_c('b-form-checkbox',{staticClass:\"mr-3 mb-2\",attrs:{\"id\":\"checkbox-1\",\"name\":\"checkbox-1\",\"value\":\"confirmed\",\"unchecked-value\":\"not_confirmed\"},model:{value:(_vm.fsm_status),callback:function ($$v) {_vm.fsm_status=$$v},expression:\"fsm_status\"}},[_vm._v(\" Confirm specication \")]),_c('b-form-checkbox',{staticClass:\"mr-3 mb-2\",attrs:{\"id\":\"checkbox-2\",\"name\":\"checkbox-2\",\"value\":\"confirmed\",\"unchecked-value\":\"not_confirmed\"},model:{value:(_vm.model_status),callback:function ($$v) {_vm.model_status=$$v},expression:\"model_status\"}},[_vm._v(\" Confirm model driver \")]),_c('input',{attrs:{\"type\":\"checkbox\",\"data-toggle\":\"toggle\",\"data-on\":\"Random\",\"data-off\":\"Off\"}}),_c('b-button',{staticClass:\"ml-2   mb-2 col-sm-2\",attrs:{\"disabled\":_vm.disableTest,\"size\":\"md\",\"variant\":_vm.variantTest},on:{\"click\":function($event){return _vm.OnTest()}}},[_c('span',[_vm._v(_vm._s(_vm.textTestButton))]),(_vm.status_stop_start&&_vm.disabledRandomTest)?_c('b-spinner',{attrs:{\"small\":\"\"}}):_vm._e()],1),_c('b-button',{staticClass:\"ml-2   mb-2 col-sm-2\",attrs:{\"disabled\":_vm.disableRandomTest,\"size\":\"md\",\"variant\":_vm.variantRandomTest},on:{\"click\":function($event){return _vm.OnRandomTest()}}},[_c('span',[_vm._v(_vm._s(_vm.textRandomTestButton))]),(_vm.status_stop_start&&_vm.disabledTest)?_c('b-spinner',{attrs:{\"small\":\"\"}}):_vm._e()],1),(_vm.test_results.length>0)?_c('download-csv',{attrs:{\"data\":_vm.test_results}},[_c('b-button',{staticClass:\"ml-2   mb-2 \",attrs:{\"size\":\"md\",\"variant\":\"secondary\"}},[_c('b-icon',{attrs:{\"icon\":\"download\",\"aria-hidden\":\"true\"}}),_vm._v(\" (.csv) \")],1)],1):_vm._e(),(_vm.test_results.length>0)?_c('b-button',{staticClass:\"ml-2   mb-2 \",attrs:{\"size\":\"md\",\"variant\":\"secondary\"},on:{\"click\":_vm.OnClearTable}},[_vm._v(\" clear \")]):_vm._e()],1),_c('b-table',{attrs:{\"outlined\":\"true\",\"sticky-header\":\"true\",\"hover\":\"\",\"items\":_vm.test_results}})],1)]):_vm._e()],1),_c('b-col',{attrs:{\"cols\":\"6\",\"md\":\"5\"}},[_c('span',{staticClass:\"secondary mt-2 mr-2\"},[_vm._v(\" Model Driver \")]),_c('b-container',{staticClass:\"normal\"},[_c('codemirror',{staticClass:\"ModelCodeMirror\",attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-container fluid>\n    <b-row>\n      <b-col align-v=\"center\" cols=\"5\"  :md=\"2\">\n        <b-container >\n        <b-form inline>\n          <span class = \"secondary mt-2 mr-2\" >Specification </span>\n          <b-form-group  class=\"mt-2\"  id=\"fieldset-1\"\n      label=\"example:\"\n      label-for=\"select_example\">\n            <b-form-select id=\"select_example\"  v-model=\"selected\" :options=\"options\" @change=\"OnSelectExample\"></b-form-select>\n          </b-form-group>\n        </b-form>\n        </b-container>\n        <!-- style=\"width:100%; height: 820px; border:thin;\" -->\n          <b-container  id=\"FSMContainer\" :class = \"zoom\"  @mouseover=\"OnMouseOverFSM\"  @mouseleave=\"OnMouseOutFSM\"   >\n                 <codemirror  class=\"MyCodeMirror\" id=\"fsm\"  v-model=\"fsm\"   :options=\"cmOptions_json\" @change=\"OnStateMachineChange\"  />\n          </b-container>\n      </b-col>\n      <b-col align-v=\"center\" cols=\"5\"  :md=\"5\">\n         <span class = \"secondary mt-2 mr-2\" >Control Panel </span>\n        <b-row  v-show=\"!mouseOverFSM\" >\n              <div v-if = \"fsm\" class=\"container\"  style=\"width:100%; height: 350px; border:solid thin;\"  v-html=\"lSVGInAString\">\n              </div>\n        </b-row>\n        <b-row v-if=\"lSVGInAString \"  v-show=\"!mouseOverFSM\" >\n        <div class=\"container\" style=\"width: 100%; height:450px\">\n          <b-row>\n              <b-col>\n               <b-form-group  class=\"align-baseline text-left\" label=\"Strategy\" >\n                  <b-form-radio-group id=\"strategy-radio-group\" v-model=\"covering_strategy\" name=\"strategy-radios\"  @input=\"OnCoverStrategy\" stacked>\n                      <b-form-radio   class=\"text-left mr-3\"  value=\"States\"   >Cover State</b-form-radio>\n                      <b-form-radio   class=\"text-left mr-5\"  value=\"Transitions-Without-Loop\"     >Cover Transition</b-form-radio>\n                      <b-form-radio   class=\"text-left mr-5\"   value=\"Transitions-With-Loop\"     >Cover Transition (Loop)</b-form-radio>\n                  </b-form-radio-group>   \n                </b-form-group>\n              </b-col>\n              <b-col>\n               <b-form-group  class=\"text-left\" label=\"Test Case Priority on State/Transition\" >\n                 <b-form inline class=\"mt-2 mb-2\">\n                  <label class=\"mr-sm-2\" for=\"inline-form-custom-select-state\">State: </label>\n                  <b-form-select id=\"inline-form-custom-select-state\" v-model=\"selected_state\" :options=\"states\"\n                    class=\"mb-2 mr-sm-2 mb-sm-0 col-sm-2\" ></b-form-select>\n                 </b-form>\n                 <b-form inline  class=\"mt-2 mb-2\">\n                     <label class=\"mr-sm-2\">Transition: </label>\n                       <b-form-select v-model=\"selected_transition_startstate\" :options=\"states\" @change=\"OnTransitions\"\n                                class=\"mb-2 mr-sm-2 mb-sm-0 col-sm-2\" ></b-form-select>\n                        <span> --> </span>\n                        <b-form-select v-model=\"selected_transition\"  :options=\"transitions\"\n                                class=\"mb-2 mr-sm-2 mb-sm-0  col-sm-2\" ></b-form-select>\n                 </b-form> \n               \n                </b-form-group>\n              </b-col>\n          </b-row>\n            <b-form inline>\n                        <b-form-checkbox\n                          id=\"checkbox-1\"\n                          class = \"mr-3 mb-2\"\n                          v-model=\"fsm_status\"\n                          name=\"checkbox-1\"\n                          value=\"confirmed\"\n                          unchecked-value=\"not_confirmed\"\n                        >\n                              Confirm specication\n                       </b-form-checkbox>\n                       <b-form-checkbox\n                                id=\"checkbox-2\"\n                                class = \"mr-3 mb-2\"\n                                v-model=\"model_status\"\n                                name=\"checkbox-2\"\n                                value=\"confirmed\"\n                                unchecked-value=\"not_confirmed\"\n                              >\n                              Confirm model driver\n                    </b-form-checkbox>\n                    <input type=\"checkbox\" data-toggle=\"toggle\" data-on=\"Random\" data-off=\"Off\">\n                    <b-button :disabled =\"disableTest\"  class=\"ml-2   mb-2 col-sm-2\"   size=\"md\" :variant=\"variantTest\" @click=\"OnTest()\">\n                             <span>{{textTestButton}}</span>\n                              <b-spinner small   v-if = \"status_stop_start&&disabledRandomTest\"></b-spinner>\n                    </b-button>\n                     \n                    <b-button :disabled =\"disableRandomTest\"  class=\"ml-2   mb-2 col-sm-2\"   size=\"md\" :variant=\"variantRandomTest\" @click=\"OnRandomTest()\">\n                       <span>{{textRandomTestButton}}</span>\n                       <b-spinner small   v-if = \"status_stop_start&&disabledTest\"></b-spinner>\n                    </b-button>\n                    \n                     <download-csv\n                                    v-if = \"test_results.length>0\"\n                                    :data   = \"test_results\">\n                                     <b-button  class=\"ml-2   mb-2 \"   size=\"md\"  variant=\"secondary\"  >\n                                          <b-icon icon=\"download\" aria-hidden=\"true\"></b-icon> \n                                          <!-- export table -->\n                                            (.csv)\n                                    </b-button>\n                      </download-csv>\n                        <b-button    v-if = \"test_results.length>0\" class=\"ml-2   mb-2 \"   size=\"md\"  variant=\"secondary\"  @click=\"OnClearTable\" > clear  </b-button>\n            </b-form>\n             <b-table outlined=true  sticky-header=true hover :items=\"test_results\"></b-table>\n          </div>\n        </b-row>\n\n      </b-col>\n      <b-col  cols=\"6\"  md=\"5\">\n           <span class = \"secondary mt-2 mr-2\" > Model Driver </span>\n          <b-container  class =\"normal\"  >\n                 <codemirror   class=\"ModelCodeMirror\" v-model=\"model\"  :options=\"cmOptions\"  />\n          </b-container> \n      </b-col>\n      \n    \n    </b-row>\n  </b-container>\n</template>\n\n\n<script>\n  import \"bootstrap-toggle/js/bootstrap-toggle.min.js\"\n  import \"bootstrap-toggle/css/bootstrap-toggle.min.css\"\n\n  import dedent from 'dedent'\n  \n  import stringify from \"json-stringify-pretty-compact\"\n\n// base style\n  import 'codemirror/lib/codemirror.css'\n\n  // theme css\n  import 'codemirror/theme/monokai.css'\n  import 'codemirror/theme/solarized.css'\n  // language\n  import 'codemirror/mode/vue/vue.js'\n\n  // active-line.js\n  import 'codemirror/addon/selection/active-line.js'\n\n  // styleSelectedText\n  import 'codemirror/addon/selection/mark-selection.js'\n  import 'codemirror/addon/search/searchcursor.js'\n\n  // highlightSelectionMatches\n  import 'codemirror/addon/scroll/annotatescrollbar.js'\n  import 'codemirror/addon/search/matchesonscrollbar.js'\n  import 'codemirror/addon/search/searchcursor.js'\n  import 'codemirror/addon/search/match-highlighter.js'\n\n  // keyMap\n  import 'codemirror/mode/clike/clike.js'\n  import 'codemirror/addon/edit/matchbrackets.js'\n  import 'codemirror/addon/comment/comment.js'\n  import 'codemirror/addon/dialog/dialog.js'\n  import 'codemirror/addon/dialog/dialog.css'\n  import 'codemirror/addon/search/searchcursor.js'\n  import 'codemirror/addon/search/search.js'\n  import 'codemirror/keymap/sublime.js'\n\n  // foldGutter\n  import 'codemirror/addon/fold/foldgutter.css'\n  import 'codemirror/addon/fold/brace-fold.js'\n  import 'codemirror/addon/fold/comment-fold.js'\n  import 'codemirror/addon/fold/foldcode.js'\n  import 'codemirror/addon/fold/foldgutter.js'\n  import 'codemirror/addon/fold/indent-fold.js'\n  import 'codemirror/addon/fold/markdown-fold.js'\n  import 'codemirror/addon/fold/xml-fold.js'\n\n  import credit from '../../assets/wecredit.json'\n  import blindAction from '../../assets/blindAuction.json'\n  import stateMachine from '../../assets/stateMachine.json'\n  import betting  from '../../assets/betting-simple.json'\n  import assetTransfer  from '../../assets/assetTransfer.json'\n\n  const RandomTestLimit = 50;\n  var counter = 0;\n  export default {\n    name: \"ModelTest\",\n    data: function () {\n      return {\n        fsm: null,\n        status_fsm: false,\n        status_fsm_change: false,\n\n       selected: null, \n\n        fsm_status:\"not_confirmed\",\n        model_status: \"not_confirmed\",\n        lSVGInAString: null,\n\n        mouseOverFSM: false, // if mouse over fsm box\n        status_test: false,  // if test completed\n        status_randomtest: false, // if random test finished\n        covering_strategy: null, // which covering strategy  is selected\n        \n      disabledTest: false,\n      disabledRandomTest: false,\n\n      textTestButton: \"Test\",\n      textRandomTestButton: \"Random Test\",\n\n      status_stop_start: false,\n      \n        // test case priority\n        states: [\n          {value: 'null', text: \"null\"}\n        ],\n        selected_state: null, \n        selected_transition_startstate: null, \n        transitions: null,\n        selected_transition: null, \n\n         log: \"<p>this is the place to show running log </p>\" + this.$smcat,\n         test_results: [],\n         test_priority: {}, \n          options: [\n          { value:  credit, text: 'credit' },\n          { value:  betting, text: 'betting' },\n          { value: blindAction, text: 'blindAction' },\n           { value: assetTransfer, text: 'assetTransfer' },\n          { value:  stateMachine, text: 'stateMachine' },\n          { value:  \"Write your specication here\", text: 'empty' }\n        ],\n       cmOptions_json: {\n          mode: {\n              name: \"javascript\",\n              json: true,\n              statementIndent: 2\n          },\n          viewportMargin: Infinity,\n          tabSize: 4,\n          styleActiveLine: true,\n          lineNumbers: true,\n          line: true,\n          foldGutter: true,\n          styleSelectedText: true,\n          keyMap: \"sublime\",\n          matchBrackets: true,\n          showCursorWhenSelecting: true,\n          theme: \"default\",\n          extraKeys: { \"Ctrl\": \"autocomplete\" },\n          hintOptions:{\n            completeSingle: false\n          }\n        },\n        cmOptions: {\n          mode: 'text/javascript',\n          viewportMargin: Infinity,\n          tabSize: 4,\n          styleActiveLine: true,\n          lineNumbers: true,\n          line: true,\n          foldGutter: true,\n          styleSelectedText: true,\n          keyMap: \"sublime\",\n          matchBrackets: true,\n          showCursorWhenSelecting: true,\n          theme: \"default\",\n          extraKeys: { \"Ctrl\": \"autocomplete\" },\n          hintOptions:{\n            completeSingle: false\n          }\n        }\n      };\n    },\n    created: function(){\n      let obj = this;\n      const event_Test = \"Test\";\n      this.$socket.on(event_Test, data=> {\n        console.log(event_Test, data);\n      } )\n      this.$socket.on(\"server\", data =>{\n          //  alert(JSON.stringify(data));\n           console.log(JSON.stringify(data));\n           if(data.event==\"event_Test_Done\"){\n                          obj.status_test = true;\n                          console.log(data);\n                          return;\n              }else if (data.event == \"RandomTestAction_Report\"){\n                          console.log(data.event);\n              }\n              // obj.$fsmservice.add_action_report(data.data)\n           \n               const lSVGInAString = obj.$smcat.render(\n                                                                 obj.$fsmservice.add_action_report(data.data).get_sm_cat(), \n                                                                       {\n                                                                           inputType: \"json\",\n                                                                           outputType: \"svg\",\n                                                                           direction: \"left-right\",\n                                                                         }\n                   ); \n                 var result = obj.$fsmservice.next_result();\n                 if(result){\n                       obj.test_results.push(result);\n                 }\n                 var  parser = new DOMParser();\n                 var xmlDoc = parser.parseFromString(lSVGInAString, \"text/xml\");\n                 // console.log(xmlDoc);\n                 xmlDoc.getElementsByTagName(\"svg\")[0].setAttribute(\"width\", \"100%\");\n                 xmlDoc.getElementsByTagName(\"svg\")[0].setAttribute(\"height\", \"100%\");\n                 var s = new XMLSerializer();\n                 obj.lSVGInAString= s.serializeToString(xmlDoc);\n      });\n\n      this.$socket.on(\"server-stop\", data =>{\n          console.log(\"server stopped:\", data);\n          obj.status_stop_start = false;\n          obj.isTestStart  = false;\n          if(obj.disabledRandomTest){\n                  obj.textRandomTestButton = \"Random Test\";\n                  obj.disabledRandomTest = false;\n                  counter ++;\n                  if (counter<RandomTestLimit){\n                    this.methods.OnRandomTest();\n                  }\n          }else if(obj.disabledTest) {\n                  obj.textTestButton = \"Test\";\n                  obj.disabledTest = false;\n          }\n      });\n    },\n    methods: {\n      GenerateSVGXMLString(sm_cat_json){\n              const lSVGInAString = this.$smcat.render(\n                sm_cat_json\n                , {\n                    inputType: \"json\",\n                    outputType: \"svg\",\n                    direction: \"left-right\",\n                  }\n                );\n                // console.log(lSVGInAString);\n                var  parser = new DOMParser();\n                var xmlDoc = parser.parseFromString(lSVGInAString, \"text/xml\");\n                // console.log(xmlDoc);\n                xmlDoc.getElementsByTagName(\"svg\")[0].setAttribute(\"width\", \"100%\");\n                xmlDoc.getElementsByTagName(\"svg\")[0].setAttribute(\"height\", \"100%\");\n                var s = new XMLSerializer();\n                this.lSVGInAString= s.serializeToString(xmlDoc);\n      },\n      OnSelectExample(){\n        if(this.selected!=\"null\"){\n              this.fsm = stringify(this.selected);\n              try {\n                    this.GenerateSVGXMLString( this.$fsmservice.add_fsm(this.fsm).get_sm_cat());\n                    this.states = this.$fsmservice.get_stateOptions();\n                    this.status_fsm = true;\n                    this.model =  dedent(`${this.$fsmservice.get_model_script()}`);\n                    console.log(this.model);\n              } catch (pError) {\n                  if(pError.toString().indexOf(\"abi\")!=-1){\n                        alert( \"The application has not been deployed before.\" );\n                  }\n                // alert(pError);\n                   console.error(pError);\n              }\n        }else{\n           this.fsm = null;\n           this.model = null;\n        }\n      },\n      OnStateMachineChange() {\n        if(this.fsm){\n            console.log(\"OnStateMachineChange\");\n            try {\n              this.GenerateSVGXMLString( this.$fsmservice.add_fsm(this.fsm).get_sm_cat());\n              this.states = this.$fsmservice.get_stateOptions();\n              this.status_fsm = true;\n              this.model =  dedent(this.$fsmservice.get_model_script());\n              this.status_test = false;\n            } catch (pError) {\n                 console.error(pError);\n                  if(pError.toString().indexOf(\"abi\")!=-1){\n                        alert( \"The application has not been deployed before.\" );\n                  }\n                 \n            }\n        }\n      },\n      OnTest(){\n        if(!this.disabledTest){\n              if(!this.isTestStart){\n                  const client_Test = \"Test_client\";\n                  console.log(client_Test);\n                  this.$fsmservice.disable_randomTest();\n                  this.$socket.emit(\"client\",{type: client_Test,\n                  data: {\n                        covering_strategy: this.covering_strategy,\n                        test_priority: {state: this.selected_state, transition:this.selected_transition}, \n                        target_contract:this.$fsmservice.get_fsm().target_contract, \n                        file_name: \"statemachine.js\", \n                        model_script: this.model,\n                        network: this.$fsmservice.network\n                    }\n                  });\n                  this.isTestStart = true;\n                  this.disabledRandomTest = true;\n                  this.textTestButton = \"Stop\"\n              }else{\n                  this.$socket.emit(\"client-stop\",{command: \"stop testing!\"});\n                  //  this.isTestStart  = false;\n                  // this.disabledRandomTest = false;\n                  // this.textTestButton = \"Test\";\n              }\n       }else{\n           alert(\"random testing  in progress!\");\n       }\n       \n    },\n      OnRandomTest(){\n        if(!this.disabledRandomTest){\n            if(!this.isTestStart){\n                  const client_Test = \"Test_client\";\n                  console.log(client_Test);\n                  this.$fsmservice.enable_randomTest();\n                  this.$socket.emit(\"client\",{type: client_Test,\n                  data: {\n                        random_test: true, \n                        covering_strategy: this.covering_strategy,\n                        test_priority: {state: this.selected_state, transition:this.selected_transition}, \n                        target_contract:this.$fsmservice.get_fsm().target_contract, \n                        file_name: \"statemachine.js\", \n                        model_script: this.model,\n                        network: this.$fsmservice.network\n                    }\n                  });\n                  this.isTestStart = true;\n                  this.disabledTest = true;\n                  this.textRandomTestButton = \"Stop\";\n\n                  // loop call; \n                  setTimeout(this.OnRandomTest(), 20*60*1000);\n            }else{\n                  this.$socket.emit(\"client-stop\",{command: \"stop testing!\"});\n                  // this.isTestStart  = false;\n                  // this.disabledTest = false;\n                  // this.textRandomTestButton = \"Random Test\";\n            }\n        }\n    },\n    OnClearTable(){\n      this.test_results = [];\n    },\n    OnMouseOverFSM(){\n          console.log(\"MouseOverFSM\");\n          this.mouseOverFSM = true;\n      },\n      OnMouseOutFSM(){\n         console.log(\"MouseLeaveFSM\");\n         this.mouseOverFSM = false;\n         if(!this.isTestStart)\n                  this.OnStateMachineChange();\n      },\n      OnCoverStrategy(){\n        console.log(`current strategy ${this.covering_strategy}`)\n         this.model = this.$fsmservice.add_covering_strategy(this.covering_strategy).get_model_script();\n         this.GenerateSVGXMLString( this.$fsmservice.get_sm_cat());\n      },\n      OnTransitions(){\n        console.log(this.selected_transition_startstate);\n        this.transitions = this.$fsmservice.get_possible_transitions(this.selected_transition_startstate);\n      }\n      \n\n    },\n    computed: {\n      disable_model_script(){\n        return this.status_fsm==false;\n      },\n      zoom(){\n        console.log( this.mouseOverFSM?\"large stack-top\": \"normal stack-top\");\n        return this.mouseOverFSM?\"large stack-top\": \"normal stack-top\";\n      },\n      disableTest(){\n        console.log(this.fsm_status, this.model_status);\n        return !(this. fsm_status == \"confirmed\" && this.model_status == \"confirmed\");\n      },\n      variantTest(){\n        return (this. fsm_status == \"confirmed\" && this.model_status == \"confirmed\")?this.status_test?\"success\":\"primary\": \"secondary\";\n      },\n      variantRandomTest(){\n        return (this. fsm_status == \"confirmed\" && this.model_status == \"confirmed\")?this.status_randomtest?\"success\":\"primary\": \"secondary\";\n      }\n    },\n    props: {\n      msg: String\n    }\n  };\n</script>\n\n<style  lang=\"scss\">\n  .container /deep/ {\n    @import \"~bootstrap-vue/dist/bootstrap-vue\";\n    @import \"~bootstrap/dist/css/bootstrap\";\n  }\n  .ModelCodeMirror {\n           text-align: left!important;\n           height: 820px !important;\n           width: 100%;\n  }\n  .MyCodeMirror {\n           text-align: left!important;\n           height: 98%;\n           width: 100%;\n  }\n  .CodeMirror {\n      width: 100%;\n      height: 100%;\n      border: 1px solid #eee;\n     }\n     .normal{\n             width:98%   !important; \n             height: 800px; border:thin\n     }\n     .large{\n              width:300%  !important; \n              height: 800px; border:thin\n     }\n      .stack-top{\n        z-index: 9;\n        margin: 20px; /* for demo purpose  */\n    }\n    div {\n        z-index: 1; /* integer */\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Test.vue?vue&type=template&id=d5b8e1e4&\"\nimport script from \"./Test.vue?vue&type=script&lang=js&\"\nexport * from \"./Test.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Test.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <b-card>\n      <b-tabs v-model=\"tabIndex\" card>\n        <b-tab title=\"network\" :title-link-class=\"linkClass(0)\" active>\n             <b-form>\n                        <label>  choose blockchain networks</label>\n                        <b-form-select id=\"inline-form-custom-select-contract-abi\" class=\"mb-3\" v-model=\"network\"  @change=\"OnSelectnetwork\"\n                          >\n                              <b-form-select-option :value=\"null\">network</b-form-select-option>\n                              <b-form-select-option value=\"fisco-bcos\">FISCO-BCOS</b-form-select-option>\n                              <b-form-select-option value=\"ethereum\">Ethereum</b-form-select-option>\n                          </b-form-select>\n                          <span v-if=\"network\">current network: {{network}}</span>\n             </b-form>             \n        \n    </b-tab>\n        <b-tab title=\"HOME\" :title-link-class=\"linkClass(1)\" active><Home></Home></b-tab>\n        <b-tab title=\"TEST\" :title-link-class=\"linkClass(2)\"><ModelTest></ModelTest></b-tab>\n         <!-- <b-tab title=\"SETTING\" :title-link-class=\"linkClass(0)\"></b-tab> -->\n        <!-- <b-tab title=\"test\" :title-link-class=\"linkClass(2)\"><Test></Test></b-tab> -->\n      </b-tabs>\n    </b-card>\n  </div>\n</template>\n\n\n<script>\n// import BotFooter from \"./components/BotFooter\";\nimport Home from \"./tabs/Home\";\nimport ModelTest from \"./tabs/Test\";\n// import Test from \"./Test\"\nexport default {\n  name: \"Tab\",\n  components: {\n    Home,\n    // Test,\n    ModelTest\n  },\n  data() {\n      return {\n        tabIndex: 1,\n        network: null\n      }\n    },\n    created: function(){\n         this.$socket.on('customEmit', function(data){ console.log(data)});\n    },\n    methods: {\n      linkClass(idx) {\n        if (this.tabIndex === idx) {\n          return ['bg-primary', 'text-light']\n        } else {\n          return ['bg-light', 'text-info']\n        }\n      },\n      OnSelectnetwork(){\n        this.$fsmservice.network = this.network;\n        console.log(this.$fsmservice);\n      }\n    }\n};\n</script>\n\n<style scoped lang=\"scss\">\n  .container /deep/ {\n    @import \"~bootstrap-vue/dist/bootstrap-vue\";\n    @import \"~bootstrap/dist/css/bootstrap\";\n  }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tab.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tab.vue?vue&type=template&id=4921f092&scoped=true&\"\nimport script from \"./Tab.vue?vue&type=script&lang=js&\"\nexport * from \"./Tab.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Tab.vue?vue&type=style&index=0&id=4921f092&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4921f092\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <!-- <div class=\"container\">\n    <p v-if=\"isConnected\">We're connected to the server!</p>\n    <p>Message from server: \"{{socketMessage}}\"</p>\n    <button @click=\"pingServer()\">Ping Server</button>\n  </div> -->\n    <NavHeader  ></NavHeader>\n    <Tab> </Tab>\n    <BotFooter> </BotFooter>\n  </div>\n</template>\n\n<script>\n\n// console.log(this.$socket);\nimport BotFooter from \"./components/BotFooter\";\nimport NavHeader from \"./components/NavHeader\";\nimport Tab from \"./components/Tab\";\nexport default {\n  name: \"App\",\n  components: {\n    BotFooter,\n    NavHeader,\n    Tab\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6dc91408&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=602b3772&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=602b3772&scoped=true&lang=scss&\"","import Vue from \"vue\";\nimport App from \"./App.vue\";\nimport Smcat from \"state-machine-cat\"\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\nimport Popper from 'popper.js'\nimport SocketIO from \"socket.io-client\"\nimport SocketIOFileUpload from 'socketio-file-upload'\nimport FSMService from \"./service/service.js\"\nimport VueCodemirror from 'vue-codemirror'\nimport JsonCSV from 'vue-json-csv'\n \n\n// import base style\n\nconst fsmservice = new FSMService();\nPopper.Defaults.modifiers.computeStyle.gpuAcceleration = false\nglobal.Popper = Popper;\nglobal.vm = vm; //Define you app variable globally\nconst SocketInstance = SocketIO('http://localhost:3000', {\n  reconnection: true,\n  reconnectionDelay: 3000\n});\nvar uploader = new SocketIOFileUpload(SocketInstance);\n\nVue.prototype.$fsmservice = fsmservice;\nVue.prototype.$uploader = uploader;\nVue.prototype.$socket = SocketInstance;\nVue.prototype.$smcat = Smcat;\n\nVue.component('downloadCsv', JsonCSV)\nVue.use(VueCodemirror);\n// Install BootstrapVue\nVue.use(BootstrapVue);\n// Optionally install the BootstrapVue icon components plugin\nVue.use(IconsPlugin);\nVue.config.productionTip = false;\n\nvar vm =new Vue({   \n  render: h => h(App)\n}).$mount(\"#app\");","export const CoverState = \"States\";\nexport const CoverTransition = \"Transitions-Without-Loop\";\nexport const CoverTransitionLoop = \"Transitions-With-Loop\";\nexport const BCOS_SUCCESS_STATUS = 0;\n\n\nexport const CMA_normal = `const assert = require(\"assert\");\nconst hex2ascii = require('hex2ascii')\nconst Machine = require(\"xstate\").Machine;\nconst createModel = require(\"@xstate/test\").createModel;\nconst  EXPIRE_CREDIT = 400;\nconst  CLEAR_CREDIT = 500;\nconst  CLOSE_CREDIT = 600;\nlet asyncFlag = false;\nconst MAX_COUNT = 60;\n\nfunction revertAsyncFlag() {\nasyncFlag = !asyncFlag;\n}\n\n\n// contract interface \n\nclass CreditController {\nconstructor(fuzzer) {\n  this.address = \"0xa7b692824ac1ff30f01c325ec7498005ee13e0bc\";\n  this.name = \"CreditController\";\n  this.fuzzer = fuzzer;\n}\n\nasync getCreditAddressByCreditNo() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"getCreditAddressByCreditNo\");\n  return fuzz;\n}\n\nasync transferAndDiscountCheck() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"transferAndDiscountCheck\");\n  return fuzz;\n}\n\nasync transferCredit() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"transferCredit\");\n  return fuzz;\n}\n\nasync staticArrayToDynamicArray() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"staticArrayToDynamicArray\");\n  return fuzz;\n}\n\nasync accountIsOk() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"accountIsOk\");\n  return fuzz;\n}\n\nasync expireOrClearOrCloseCredit(option) {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"expireOrClearOrCloseCredit\", option);\n  return fuzz;\n}\n\nasync discountCredit() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"discountCredit\");\n  return fuzz;\n}\n\nasync state() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"state\");\n  return fuzz;\n}\n\nasync createCredit() {\n  let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"createCredit\");\n  return fuzz;\n}\n\n}\n// state machine context\nclass StateMachineCtx {\nconstructor(fsmreplayer, fuzzer) {\n  this.CreditController = new CreditController(fuzzer);\n\n  this.state = {\n    \"id\": \"FSM#1\"\n  };\n  this.fuzzer = fuzzer;\n  this.fsmreplayer = fsmreplayer;\n}\nasync initialize() {\n  this.CreditController.address = await this.fsmreplayer.initialize();\n}\nstatic getInstance(fsmreplayer, fuzzer) {\n  if (!StateMachineCtx.instance)\n    StateMachineCtx.instance = new StateMachineCtx(fsmreplayer, fuzzer);\n  return StateMachineCtx.instance;\n}\nasync getState() {\n  //TO DO, set what your state means and how to get the state\n  if (this.CreditController.state) {\n    let ret = await this.CreditController.state();\n    this.state = BigInt(ret.receipt.result.output.toString());\n  } else if (this.CreditController.stage) {\n    let ret = await this.CreditController.stage();\n    this.state = BigInt(ret.receipt.result.output.toString());\n  } else {\n    this.state = null;\n  }\n  console.log(\"state:\", this.state);\n  return this.state;\n}\n// action_functions_mapping\nasync action_create() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 0, \"preCondition violated: current state is \" + preState);\n\n    let retcreateCredit = await StateMachineCtx.getInstance().CreditController.createCredit();\n    ret.push(retcreateCredit);\n    console.log(\"current test case: \", BigInt(retcreateCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(retcreateCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let retcreateCredit = await StateMachineCtx.getInstance().CreditController.createCredit();\n      ret.push(retcreateCredit);\n      console.log(\"current test case: \", BigInt(retcreateCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retcreateCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 1, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\nasync action_discount() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 1, \"preCondition violated: current state is \" + preState);\n\n    let retdiscountCredit = await StateMachineCtx.getInstance().CreditController.discountCredit();\n    ret.push(retdiscountCredit);\n    console.log(\"current test case: \", BigInt(retdiscountCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(retdiscountCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let retdiscountCredit = await StateMachineCtx.getInstance().CreditController.discountCredit();\n      ret.push(retdiscountCredit);\n      console.log(\"current test case: \", BigInt(retdiscountCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retdiscountCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 2, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\nasync action_transfer() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 1, \"preCondition violated: current state is \" + preState);\n\n    let rettransferCredit = await StateMachineCtx.getInstance().CreditController.transferCredit();\n    ret.push(rettransferCredit);\n    console.log(\"current test case: \", BigInt(rettransferCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(rettransferCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let rettransferCredit = await StateMachineCtx.getInstance().CreditController.transferCredit();\n      ret.push(rettransferCredit);\n      console.log(\"current test case: \", BigInt(rettransferCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(rettransferCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 1, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\nasync action_expire() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n    let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:EXPIRE_CREDIT}]});\n    ret.push(retexpireOrClearOrCloseCredit);\n    console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:EXPIRE_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 3 || postState == 3, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\nasync action_close() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n    let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLOSE_CREDIT}]});\n    ret.push(retexpireOrClearOrCloseCredit);\n    console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLOSE_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 5 || postState == 5, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\nasync action_clear() {\n  let ret = [];\n  if (asyncFlag) {\n    // bcos passed status:0\n    let executeStatus = BigInt(0);\n    let ctx = StateMachineCtx.getInstance();\n    let count = 0;\n    // PreCondition. \n    let preState = await ctx.getState();\n    assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n    let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLEAR_CREDIT}]});\n    ret.push(retexpireOrClearOrCloseCredit);\n    console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n    executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    while (executeStatus != 0 && count < MAX_COUNT) {\n      count++;\n      executeStatus = BigInt(0);\n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLEAR_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n    }\n\n    if (count >= MAX_COUNT) {\n      throw \"TIMEOUT,  too many failed test cases!\";\n    }\n    let postState = await ctx.getState();\n    assert(null == postState || postState == 4 || postState == 4, \"postCondition violated: current state is \" + postState);\n    // PostCondition. \n  }\n  return ret;\n}\n}\n// state machine \nconst createStateMachine = statectx => {\nreturn Machine({\n  id: \"FSM#1\",\n  initial: \"initial\",\n  context: {\n    ctx: statectx\n  },\n  states: {\n\n    initial: {\n      on: {\n        create: {\n          target: \"CREATED\",\n          actions: \"action_create\"\n        }\n      }\n    },\n    CREATED: {\n      on: {\n        transfer: {\n          target: \"CREATED\",\n          actions: \"action_transfer\"\n        },\n        discount: {\n          target: \"DISCOUNTED\",\n          actions: \"action_discount\"\n        },\n        expire: {\n          target: \"EXPIRED\",\n          actions: \"action_expire\"\n        },\n        clear: {\n          target: \"CLEARED\",\n          actions: \"action_clear\"\n        },\n        close: {\n          target: \"CLOSED\",\n          actions: \"action_close\"\n        }\n      }\n    },\n    DISCOUNTED: {\n      on: {\n        expire: {\n          target: \"EXPIRED\",\n          actions: \"action_expire\"\n        },\n        clear: {\n          target: \"CLEARED\",\n          actions: \"action_clear\"\n        },\n        close: {\n          target: \"CLOSED\",\n          actions: \"action_close\"\n        }\n      }\n    },\n    EXPIRED: {\n      type: \"final\"\n    },\n    CLEARED: {\n      type: \"final\"\n    },\n    CLOSED: {\n      type: \"final\"\n    }\n  }\n}, {\n  actions: {\n    action_create: statectx.action_create,\n    action_discount: statectx.action_discount,\n    action_transfer: statectx.action_transfer,\n    action_expire: statectx.action_expire,\n    action_close: statectx.action_close,\n    action_clear: statectx.action_clear\n  }\n});\n}\n\nmodule.exports.StateMachineCtx = StateMachineCtx\nmodule.exports.revertAsyncFlag = revertAsyncFlag;\nmodule.exports.createStateMachine = createStateMachine`;\n\nexport const CMA_dummy = `const assert = require(\"assert\");\nconst hex2ascii = require('hex2ascii')\nconst Machine = require(\"xstate\").Machine;\nconst createModel = require(\"@xstate/test\").createModel;\nconst  EXPIRE_CREDIT = 400;\nconst  CLEAR_CREDIT = 500;\nconst  CLOSE_CREDIT = 600;\nlet asyncFlag = false;\nconst MAX_COUNT = 60;\n\nfunction revertAsyncFlag() {\n  asyncFlag = !asyncFlag;\n}\n\n\n// contract interface \n\nclass CreditController {\n  constructor(fuzzer) {\n    this.address = \"0xa7b692824ac1ff30f01c325ec7498005ee13e0bc\";\n    this.name = \"CreditController\";\n    this.fuzzer = fuzzer;\n  }\n\n  async getCreditAddressByCreditNo() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"getCreditAddressByCreditNo\");\n    return fuzz;\n  }\n\n  async transferAndDiscountCheck() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"transferAndDiscountCheck\");\n    return fuzz;\n  }\n\n  async transferCredit() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"transferCredit\");\n    return fuzz;\n  }\n\n  async staticArrayToDynamicArray() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"staticArrayToDynamicArray\");\n    return fuzz;\n  }\n\n  async accountIsOk() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"accountIsOk\");\n    return fuzz;\n  }\n\n\n  async expireOrClearOrCloseCredit(option) {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"expireOrClearOrCloseCredit\", option);\n    return fuzz;\n  }\n\n  async discountCredit() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"discountCredit\");\n    return fuzz;\n  }\n\n  async state() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"state\");\n    return fuzz;\n  }\n\n  async createCredit() {\n    let fuzz = await this.fuzzer.full_fuzz_fun(\"CreditController\", this.address, \"createCredit\");\n    return fuzz;\n  }\n\n}\n// state machine context\nclass StateMachineCtx {\n  constructor(fsmreplayer, fuzzer) {\n    this.CreditController = new CreditController(fuzzer);\n\n    this.state = {\n      \"id\": \"FSM#1\"\n    };\n    this.fuzzer = fuzzer;\n    this.fsmreplayer = fsmreplayer;\n  }\n  async initialize() {\n    this.CreditController.address = await this.fsmreplayer.initialize();\n  }\n  static getInstance(fsmreplayer, fuzzer) {\n    if (!StateMachineCtx.instance)\n      StateMachineCtx.instance = new StateMachineCtx(fsmreplayer, fuzzer);\n    return StateMachineCtx.instance;\n  }\n  async getState() {\n    //TO DO, set what your state means and how to get the state\n    if (this.CreditController.state) {\n      let ret = await this.CreditController.state();\n      this.state = BigInt(ret.receipt.result.output.toString());\n    } else if (this.CreditController.stage) {\n      let ret = await this.CreditController.stage();\n      this.state = BigInt(ret.receipt.result.output.toString());\n    } else {\n      this.state = null;\n    }\n    console.log(\"state:\", this.state);\n    return this.state;\n  }\n  // action_functions_mapping\n  async action_create() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 0, \"preCondition violated: current state is \" + preState);\n\n      let retcreateCredit = await StateMachineCtx.getInstance().CreditController.createCredit();\n      ret.push(retcreateCredit);\n      console.log(\"current test case: \", BigInt(retcreateCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retcreateCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let retcreateCredit = await StateMachineCtx.getInstance().CreditController.createCredit();\n        ret.push(retcreateCredit);\n        console.log(\"current test case: \", BigInt(retcreateCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(retcreateCredit.receipt.status.toString());\n      }\n\n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 1, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n  async action_discount() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 1, \"preCondition violated: current state is \" + preState);\n\n      let retdiscountCredit = await StateMachineCtx.getInstance().CreditController.discountCredit();\n      ret.push(retdiscountCredit);\n      console.log(\"current test case: \", BigInt(retdiscountCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retdiscountCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let retdiscountCredit = await StateMachineCtx.getInstance().CreditController.discountCredit();\n        ret.push(retdiscountCredit);\n        console.log(\"current test case: \", BigInt(retdiscountCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(retdiscountCredit.receipt.status.toString());\n      }\n\n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 2, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n  async action_transfer() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 1, \"preCondition violated: current state is \" + preState);\n\n      let rettransferCredit = await StateMachineCtx.getInstance().CreditController.transferCredit();\n      ret.push(rettransferCredit);\n      console.log(\"current test case: \", BigInt(rettransferCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(rettransferCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let rettransferCredit = await StateMachineCtx.getInstance().CreditController.transferCredit();\n        ret.push(rettransferCredit);\n        console.log(\"current test case: \", BigInt(rettransferCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(rettransferCredit.receipt.status.toString());\n      }\n\n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 1, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n  async action_expire() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:EXPIRE_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:EXPIRE_CREDIT}]});\n        ret.push(retexpireOrClearOrCloseCredit);\n        console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      }\n  \n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 3 || postState == 3, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n  async action_close() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n    \n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLOSE_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLOSE_CREDIT}]});\n        ret.push(retexpireOrClearOrCloseCredit);\n        console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      }\n\n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 5 || postState == 5, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n  async action_clear() {\n    let ret = [];\n    if (asyncFlag) {\n      // bcos passed status:0\n      let executeStatus = BigInt(0);\n      let ctx = StateMachineCtx.getInstance();\n      let count = 0;\n      // PreCondition. \n      let preState = await ctx.getState();\n      assert(null == preState || preState == 1 || preState == 2, \"preCondition violated: current state is \" + preState);\n\n      let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLEAR_CREDIT}]});\n      ret.push(retexpireOrClearOrCloseCredit);\n      console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n      executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      while (executeStatus != 0 && count < MAX_COUNT) {\n        count++;\n        executeStatus = BigInt(0);\n        let retexpireOrClearOrCloseCredit = await StateMachineCtx.getInstance().CreditController.expireOrClearOrCloseCredit({static:[{index:3, value:CLEAR_CREDIT}]});\n        ret.push(retexpireOrClearOrCloseCredit);\n        console.log(\"current test case: \", BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString()) == BigInt(0) ? \"passed\" : \"failed\");\n        executeStatus += BigInt(retexpireOrClearOrCloseCredit.receipt.status.toString());\n      }\n\n      if (count >= MAX_COUNT) {\n        throw \"TIMEOUT,  too many failed test cases!\";\n      }\n      let postState = await ctx.getState();\n      assert(null == postState || postState == 4 || postState == 4, \"postCondition violated: current state is \" + postState);\n      // PostCondition. \n    }\n    return ret;\n  }\n}\n// state machine \nconst createStateMachine = statectx => {\n  return Machine({\n    id: \"FSM#1\",\n    initial: \"initial\",\n    context: {\n      ctx: statectx\n    },\n    states: {\n\n      initial: {\n        on: {\n          create: {\n            target: \"dummy_CREATED_initial\",\n            actions: \"action_create\"\n          }\n        }\n      },\n      CREATED: {\n        on: {\n          transfer: {\n            target: \"CREATED\",\n            actions: \"action_transfer\"\n          },\n          discount: {\n            target: \"DISCOUNTED\",\n            actions: \"action_discount\"\n          },\n          expire: {\n            target: \"EXPIRED\",\n            actions: \"action_expire\"\n          },\n          clear: {\n            target: \"CLEARED\",\n            actions: \"action_clear\"\n          },\n          close: {\n            target: \"CLOSED\",\n            actions: \"action_close\"\n          }\n        }\n      },\n      DISCOUNTED: {\n        on: {\n          expire: {\n            target: \"EXPIRED\",\n            actions: \"action_expire\"\n          },\n          clear: {\n            target: \"CLEARED\",\n            actions: \"action_clear\"\n          },\n          close: {\n            target: \"CLOSED\",\n            actions: \"action_close\"\n          }\n        }\n      },\n      EXPIRED: {\n        type: \"final\"\n      },\n      CLEARED: {\n        type: \"final\"\n      },\n      CLOSED: {\n        type: \"final\"\n      },\n      dummy_CREATED_initial: {\n        on: {\n          transfer: {\n            target: \"CREATED\",\n            actions: \"action_transfer\"\n          }\n        }\n      }\n    }\n  }, {\n    actions: {\n      action_create: statectx.action_create,\n      action_discount: statectx.action_discount,\n      action_transfer: statectx.action_transfer,\n      action_expire: statectx.action_expire,\n      action_close: statectx.action_close,\n      action_clear: statectx.action_clear\n    }\n  });\n}\n\nmodule.exports.StateMachineCtx = StateMachineCtx;\nmodule.exports.revertAsyncFlag = revertAsyncFlag;\nmodule.exports.createStateMachine = createStateMachine;`;","import assert from \"assert\";\nvar beautify = require('js-beautify').js;\nimport {CMA_normal,   CMA_dummy, CoverState, CoverTransition,  CoverTransitionLoop, BCOS_SUCCESS_STATUS} from \"./common.js\"\nexport default class FSMService {\n    constructor() {}\n    add_contracts(contracts) {\n        this.contracts = contracts;\n        return this;\n    }\n    enable_randomTest(){\n        this.random_test = true;\n        this.add_covering_strategy(this.strategy);\n    }\n    disable_randomTest(){\n        this.random_test = false;\n        this.add_covering_strategy(this.strategy);\n    }\n    get_fsm(){\n        return this.fsm;\n    }\n    get_stateOptions(){\n        assert(this.fsm);\n        let ret = [];\n        for (let state of this.fsm.states){\n            ret.push({value: state.name, text: state.name});\n        }\n        return ret;\n    }\n    get_possible_transitions(start_state){\n        assert(start_state);\n        let transitions = [];\n         for(let transition of this.fsm.transitions ){\n                        if(transition.from==start_state){\n                            transitions.push({text: transition.to, value: `${transition.action}`});\n                        }\n         }\n        return transitions;\n    }\n    generate_dummy_loop_fsm(){\n        let dummy_states = JSON.parse(JSON.stringify(this.fsm.states));\n        let dummy_transitions = JSON.parse(JSON.stringify(this.fsm.transitions));\n        let loopStates = new Set();\n        let loopTransitions = {};\n        for(let transition of this.fsm.transitions){\n            if(transition.from == transition.to){\n                loopStates.add(transition.from);\n                loopTransitions[transition.from] = transition;\n            }\n        }\n        // add concrete dummy State\n        for (let transition of this.fsm.transitions){\n            if(transition.from != transition.to && loopStates.has(transition.to)){\n                // add concrete dummy state to dummy_states\n                for (let state of this.fsm.states){\n                    if(state.name == transition.to){\n                        let dummyState = JSON.parse(JSON.stringify(state));\n                        // add dummy state\n                        dummyState.name = `dummy_${state.name.trim()}_${transition.from.trim()}`;\n                        dummy_states.push(dummyState);\n\n                       // remove the original transition\n                        for (let dtransition of dummy_transitions){\n                            if(dtransition.from == transition.from && dtransition.to == transition.to &&  dtransition.action == transition.action){\n                                dummy_transitions.splice(dummy_transitions.indexOf(dtransition),1);\n                                break;\n                            }\n                        }\n                        let dummyTransitionFrom =  JSON.parse(JSON.stringify(transition));\n                        dummyTransitionFrom.to = dummyState.name;\n                        let dummyTransitionTo = JSON.parse(JSON.stringify(loopTransitions[transition.to]));\n                        dummyTransitionTo.from = dummyState.name;\n                        // add dummy transtions\n                        dummy_transitions.push(dummyTransitionFrom);\n                        dummy_transitions.push(dummyTransitionTo);\n                    }\n                }\n            }\n        }\n        this.fsm.dummy_states = dummy_states;\n        this.fsm.dummy_transitions = dummy_transitions;\n    }\n    add_covering_strategy(strategy){\n        this.strategy = strategy;\n        this.activate_states =  new Set();\n        this.activate_transition= new Set();\n        this.currentState = null;\n        this.action_Report =  null;\n        this.previous_action_Report = null;\n        this.generate_dummy_loop_fsm();\n        for(let transition of this.fsm.transitions){\n            if(transition.color){\n                transition.color = \"black\";\n            }\n        }\n        for(let state of this.fsm.states){\n            if(state.color){\n                state.color = \"black\";\n            }\n        }\n        console.log(this);\n        return this;\n    }\n    add_action_report(action_Report){\n        \n        // validate currentState\n        if (!this.currentState || (action_Report.index && action_Report.index == 1)){\n            this.currentState =  this._get_initial_state();\n            this.action_Report = null;\n            this.previous_action_Report = null;\n        }\n\n        this.action_Report  = action_Report;\n\n        console.log(action_Report);\n        let action = this.action_Report.action;\n        let current_to_state;\n         //update currentState\n         let transitionID = 0;\n         for (let transition of this.fsm.transitions){\n            if (transition.from==this.currentState && `action_${transition.action}` == action){\n                transition.color = \"red\";\n                this.currentState = transition.to;\n                break;\n            }\n            transitionID ++;\n        }\n        for(let state of this.fsm.states){\n            if (state.name == this.currentState){\n                state.color = \"red\";\n                current_to_state = state;\n            }\n        }\n        if(this.activate_transition.has(transitionID)){\n            this.isFresh_result = false;\n        }else{\n            this.isFresh_result = true;\n        }\n        this.activate_transition.add(transitionID);\n        this.activate_states.add(current_to_state);\n        console.log(this.currentState);\n        return this;\n    }\n    next_result(){\n        if(!this.random_test){\n                let path = [];\n                for(let i=0;  i< this.action_Report.index; i++){\n                    let fullaction = this.action_Report.plan[i];\n                    path.push(fullaction.type.split(\"action_\")[1]);\n                }\n                console.log(`fresh result ${this.isFresh_result? \"yes\":\"no\"}`);\n                if(this.action_Report && this.isFresh_result == true){\n                        let ret =  {\n                            //  Contract: this.fsm.target_contract,\n                            \"#Strategy\": this.strategy,\n                            \"#States\": this.currentState,\n                            \"#Paths\": path,\n                            // \"#Transitions\": path.length,\n                            \"#Test Cases\": this.action_Report.test_cases,\n                            \"#Times(s)\": (this.action_Report.currentTime-this.action_Report.startTime).toFixed(3)\n                        };\n                        this.action_Report  = null;\n                        return ret;\n                    }else{\n                        return null;\n                    }\n        }else{\n            if(this.action_Report){\n                this.action_Report.action= [this.action_Report.action.split(\"action_\")[1]];\n                if(this.previous_action_Report){\n                    this.action_Report.action = this.previous_action_Report.action.concat(this.action_Report.action);\n                }\n                console.log(`fresh result ${this.isFresh_result? \"yes\":\"no\"}`);\n                if(this.action_Report && this.isFresh_result == true){\n                                let ret =  {\n                                    //  Contract: this.fsm.target_contract,\n                                    \"#Strategy\": \"Random Test\",\n                                    \"#States\": this.currentState,\n                                    \"#Paths\": this.action_Report.action,\n                                    \"#Test Cases\": this.action_Report.test_cases,\n                                    \"#Times(s)\": (this.action_Report.currentTime-this.action_Report.startTime).toFixed(3)\n                                };\n                                this.previous_action_Report = this.action_Report;\n                                this.action_Report  = null;\n                                return ret;\n                            }else{\n                                this.previous_action_Report = this.action_Report;\n                                this.action_Report  = null;\n                                return null;\n                            }\n            }\n         }\n   return null;\n}\n\n    add_fsm(fsm) {\n        this.fsm = JSON.parse(fsm);\n        //State Machine cat\n        assert(this.fsm.id, \"id error\");\n        assert(this.fsm.states, \"states error\");\n        assert(this.fsm.transitions, \"transitions error\");\n        // Customized actions\n        assert(this.fsm.actions, \"actions error\");\n        //  Related contracts\n        assert(this.fsm.contracts, \"contracts error\");\n        return this;\n    }\n    __get_sm_state(states){\n        let ret = [];\n        for(let state of states){\n            ret.push({name: state.name, type:state.type, color: state.color?state.color: \"black\"})\n        }\n        return ret;\n    }\n    get_sm_cat() {\n        console.log(JSON.stringify({\n            states: this.fsm.states,\n            transitions: this.fsm.transitions\n        }));\n        return JSON.stringify({\n            states: this.__get_sm_state(this.fsm.states),\n            transitions: this.fsm.transitions\n        });\n    }\n    _get_abi_interface(name, address, abis) {\n        let template_iterface = ``;\n        for (let abi of abis) {\n            // many Library contract  usually has function with all upper-case name.\n            if (abi.name && abi.type == \"function\" && abi.name != abi.name.toUpperCase()) {\n                template_iterface += `\n    async ${abi.name}(){\n        let fuzz = await this.fuzzer.full_fuzz_fun(\"${name}\", this.address,  \"${abi.name}\");\n        return fuzz;\n    }\n        `\n            }\n        }\n        return template_iterface;\n    }\n    _get_contract_interface() {\n        let template_contract_interfaces = ``;\n        for (let contract of Object.keys(this.fsm.contracts)) {\n            template_contract_interfaces += `// contract interface \\n\n    class ${contract}{\n      constructor(fuzzer){\n        this.address = \"${this.fsm.contracts[contract].address}\";\n        this.name = \"${contract}\";\n        this.fuzzer  = fuzzer;\n      }\n      ${this._get_abi_interface(this.fsm.contracts[contract].name, this.fsm.contracts[contract].address, this.contracts[this.fsm.contracts[contract].name])}\n    }`;\n        }\n        return template_contract_interfaces;\n    }\n\n    _get_contracts_interface_instances() {\n        let instances = ``;\n        for (let contract of Object.keys(this.fsm.contracts)) {\n            instances += `this.${contract} = new ${contract}(this.fuzzer);\\n`\n        }\n        return instances;\n    }\n    __get_action_functions(funs) {\n        let ret = ``;\n        for (let contract of Object.keys(funs)) {\n            for (let fun of funs[contract]) {\n                ret += `let ret${fun} = await StateMachineCtx.getInstance().${contract}.${fun}();\n                ret.push(ret${fun});\n                console.log( \"current test case: \", BigInt(ret${fun}.receipt.status.toString())== BigInt(${BCOS_SUCCESS_STATUS})?\"passed\":\"failed\");\n                executeStatus += BigInt(ret${fun}.receipt.status.toString());`\n            }\n        }\n        return ret;\n    }\n    _getPrePostPredicateForAction(action){\n        let prePredication = [];\n        let postPredication = [];\n        for( let transition of this.fsm.transitions){\n            if(action == transition.action){\n                //    prePredication.push(this.fsm.states)\n                for(let state of  this.fsm.states){\n                    if (transition.from == state.name && state.Predicate){\n                            prePredication.push(state.Predicate);\n                    }\n                    if (transition.to == state.name && state.Predicate){\n                           postPredication.push(state.Predicate);\n                    }\n                } \n            }\n        }\n        return {\n            \"prePredicate\":   `let preState = await ctx.getState();\n            assert(null==preState||${prePredication.join(\"||\").replace(/state/gi, \"preState\")}, \"preCondition violated: current state is \"+preState  );`,\n            \"postPredicate\": `let postState = await ctx.getState();\n            assert(null==postState||${postPredication.join(\"||\").replace(/state/gi, \"postState\")},  \"postCondition violated: current state is \"+postState );`\n        }\n    }\n    _get_action_functions_mapping() {\n        let mapping = ``;\n        for (let action of Object.keys(this.fsm.actions)) {\n             let prepost = this._getPrePostPredicateForAction(action);\n            mapping += `async action_${action}(){\n                let ret = [];\n                if(asyncFlag){\n                        // bcos passed status:${BCOS_SUCCESS_STATUS}\n                        let executeStatus = BigInt(${BCOS_SUCCESS_STATUS});\n                        let ctx =  StateMachineCtx.getInstance();\n                        let count = 0;\n                        // PreCondition. \n                        ${prepost.prePredicate}\\n\n                        ${this.__get_action_functions(this.fsm.actions[action])}\n                        while(executeStatus != ${BCOS_SUCCESS_STATUS}  && count<MAX_COUNT){\n                            count ++;\n                            executeStatus = BigInt(${BCOS_SUCCESS_STATUS});\n                            ${this.__get_action_functions(this.fsm.actions[action])}\n                        }\\n\n                        if(count>=MAX_COUNT){\n                            throw \"TIMEOUT,  too many failed test cases!\";\n                        }\n                        ${prepost.postPredicate}\n                        // PostCondition. \n                }\n                return ret;\n            }`\n        }\n        return mapping;\n    }\n\n    // record state msg, and action execution\n    _get_state_machine_ctx() {\n        let template_state_machine_ctx = `// state machine context\nclass StateMachineCtx{\n    constructor(fsmreplayer, fuzzer){\n        this.state = {\"id\": \"${this.fsm.id}\"};\n        this.fuzzer = fuzzer;\n        this.fsmreplayer = fsmreplayer;\n    }\n    async initialize(){\n       ${this._get_contracts_interface_instances()}\n       this.${this.fsm.target_contract}.address = await  this.fsmreplayer.initialize();\n    }\n    static getInstance(fsmreplayer, fuzzer) {\n        if (!StateMachineCtx.instance)\n            StateMachineCtx.instance = new StateMachineCtx(fsmreplayer, fuzzer);\n        return StateMachineCtx.instance;\n    }\n    async getState(){\n        //TO DO, set what your state means and how to get the state\n        if(this.${this.fsm.target_contract}.state){\n            let ret = await  this.${this.fsm.target_contract}.state();\n            console.log(ret);\n            if( ret.receipt.result)\n                    this.state = BigInt(ret.receipt.result.output.toString());\n            else\n                    this.state = BigInt(ret.receipt.toString());\n        }else if(this.${this.fsm.target_contract}.stage){\n            let ret =await  this.${this.fsm.target_contract}.stage();\n            console.log(ret);\n            if( ret.receipt.result)\n                    this.state = BigInt(ret.receipt.result.output.toString());\n            else\n                    this.state = BigInt(ret.receipt.toString());\n        }else {\n            this.state = null;\n        }\n        console.log(\"state:\", this.state);\n        return this.state;\n    }\n    // action_functions_mapping\n    ${this._get_action_functions_mapping()}\n}`;\n        return template_state_machine_ctx;\n    }\n\n    __get_xstates() {\n        let ret = ``;\n        let states = this.strategy==CoverTransitionLoop? this.fsm.dummy_states:this.fsm.states;\n        let transitions =  this.strategy == CoverTransitionLoop? this.fsm.dummy_transitions: this.fsm.transitions; \n        for (let state of states ) {\n            let ons = ``;\n            let count = 0;\n            for (let transition of transitions ) {\n                if (transition.from == state.name) {\n                    count++;\n                    ons +=\n                        `\\n                 ${transition.action}:{\n                            target:  \"${transition.to}\",\n                            actions: \"action_${transition.action}\"\n                        },`;\n                }\n            }\n            if (ons.charAt(ons.length - 1) == \",\")\n                ons = ons.substring(0, ons.length - 1);\n            if (count != 0) {\n                ret +=\n                    `\\n         ${state.name}:{\n                    on:{${ons}\n                    }\n                },`;\n            } else {\n                ret +=\n                    `\\n       ${state.name}:{\n                    type: \"final\"\n                },`;\n            }\n        }\n        if (ret.charAt(ret.length - 1) == \",\") {\n            ret = ret.substring(0, ret.length - 1);\n        }\n        return ret;\n    }\n    __get_xactions() {\n        let ret = ``;\n        let array = [];\n        for (let action of Object.keys(this.fsm.actions)) {\n            array.push(`action_${action}:statectx.action_${action}`);\n        }\n        ret += `{\\n${array.join(\",\")}\\n}`;\n        return ret;\n    }\n    _get_initial_state(){\n        for(let state of this.fsm.states){\n            if(state.type == \"initial\")\n                return state.name;\n        }\n        assert(false, \"there must be a  initial state defined in model\");\n    }\n    _get_state_machine() {\n        let template_state_machine = `// state machine \nconst createStateMachine = statectx =>{\n    return Machine({\n        id: \"${this.fsm.id}\",\n        initial: \"${this._get_initial_state()}\",\n        context: {\n               ctx: statectx\n        },\n        states:{\n                    ${this.__get_xstates()}\n                }\n        },{actions:${this.__get_xactions()}});\n}\n`;\n        return template_state_machine;\n    }\n\n    get_model_script() {\n        // console.log(this.contracts);\n        let model_script = \"\";\n        // TO DO\n        let template_requires = `const assert = require(\"assert\");\nconst hex2ascii = require('hex2ascii')\nconst Machine = require(\"xstate\").Machine;\nconst createModel = require(\"@xstate/test\").createModel;\n\nlet asyncFlag = false;\nconst MAX_COUNT= 60;\nfunction revertAsyncFlag() {\n    asyncFlag = !asyncFlag;\n}\n\\n`;\n        model_script = template_requires + \"\\n\" +\n            this._get_contract_interface() + \"\\n\" +\n            this._get_state_machine_ctx() + \"\\n\" +\n            this._get_state_machine() + \"\\n\" +\n            \"module.exports.StateMachineCtx = StateMachineCtx\\n\"+\n            \"module.exports.revertAsyncFlag = revertAsyncFlag;\\n\" + \n            \"module.exports.createStateMachine = createStateMachine\";   \n        if (this.fsm.target_contract==\"CreditController\" ){\n                if(!this.strategy || this.strategy ==CoverState || this.strategy==CoverTransition ){\n                    model_script = CMA_normal;\n                }\n                if(this.strategy==CoverTransitionLoop){\n                    model_script = CMA_dummy;\n                }\n        }\n        return beautify(model_script, {\n            indent_size: 2,\n            space_in_empty_paren: true\n        });\n    }\n    \n    to_sm_Xstate() {\n\n    }\n}","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Test.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tab.vue?vue&type=style&index=0&id=4921f092&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tab.vue?vue&type=style&index=0&id=4921f092&scoped=true&lang=scss&\""],"sourceRoot":""}